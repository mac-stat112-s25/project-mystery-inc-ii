[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Gender in Scooby-Doo TV Episodes",
    "section": "",
    "text": "1 Presentation",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#slides",
    "href": "index.html#slides",
    "title": "Gender in Scooby-Doo TV Episodes",
    "section": "\n1.1 Slides",
    "text": "1.1 Slides",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#video",
    "href": "index.html#video",
    "title": "Gender in Scooby-Doo TV Episodes",
    "section": "\n1.2 Video",
    "text": "1.2 Video",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#exploration-of-monster-genders",
    "href": "index.html#exploration-of-monster-genders",
    "title": "Gender in Scooby-Doo TV Episodes",
    "section": "\n6.1 Exploration of Monster Genders",
    "text": "6.1 Exploration of Monster Genders\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation\n\n\n\nSome series have no female monsters (ie “A Pup Named Scooby-Doo,” “The New Scooby and Scrappy Doo Show”). The largest percentage of female monsters a show has is a little under 25% (“Scooby-Doo Mystery Incorporated”). There is only 1 monster with no gender – ‘plant’ monster.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation\n\n\n\nThe monster type with most female versions is magician. More than half magicians are female. After that, not many monsters have female versions – undead, ancient, mythical, mechanical have a few female versions, but less than a quarter of those monsters are female.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation\n\n\n\nFor the series “Shaggy & Scooby-Doo Get a Clue,” a the proprtion of monster types varies a lot amongst other series. It has the largest proportion of super-villains and disguised monsters, but very few ghosts. For other series, ghost and undead are the most common monster types.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#female-monsters-over-time",
    "href": "index.html#female-monsters-over-time",
    "title": "Gender in Scooby-Doo TV Episodes",
    "section": "\n6.2 Female Monsters over Time",
    "text": "6.2 Female Monsters over Time\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation\n\n\n\nSpecifically focusing on female monsters, which are underrepresented across all seasons, the total number of female monsters drops across seasons and reaches 0 female monsters in season four. This graph, rather than showing only the proportion of male and female monsters in each season, also shows the total number of monsters in each season. Taking into account the total number of monsters shows that one of the reasons that the number of female monsters is decreasing is that the total number of monsters is decreasing. The proportion of female to male monsters stays roughly the same across all four seasons in the data set, except for the fourth season in which there are notably no female monsters in season four. This may be due to a small total sample size, a low total number of episodes.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#portrayal-of-male-vs-female-monsters",
    "href": "index.html#portrayal-of-male-vs-female-monsters",
    "title": "Gender in Scooby-Doo TV Episodes",
    "section": "\n6.3 Portrayal of Male vs Female Monsters",
    "text": "6.3 Portrayal of Male vs Female Monsters\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation\n\n\n\nWhen magician monsters are broken down into subtypes, we can see that the only subtypes of magicians that include women are “shaman” and “witches”. All witches are women, promoting the stereotype that women are witches. Some shamans are women, but not all.\nThere are no female wizards, which promotes the stereotype of wizards usually being male. Most witches are considered to be “magician witches” and a small proportion of witches are considered to be “ghost witches.”\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation\n\n\n\nWithin Scooby-Doo episodes, the monster can either be real or not real. Most commonly, a monster is not real, meaning it is just a person in disguise (ie the culprit) and the monster’s role was to scare the audience and the Gang. These monsters are commonly unmasked by the Gang in the show, which was tracked by the variable “unmasked.” However, there are instances when the monster is actually real and not a person in disguise. In these instances, the monster is often not unmasked, or the Gang unmaskes a version of that monster in disguise.\nFrom the graph on the left, there is a higher proportion of male monsters that are real (~30%) compared to real female monsters (~20%). There is also a higher proportion of female monsters unmasked (over 50% or half), while only a third of male monsters are unmasked, as indicated by the chart on the right. From these two visualizations, there is a clear trend that when there are female monsters in episodes, they are typically portrayed as an ordinary monster in disguise that is unmasked by the Gang. While there are some male monsters portrayed like this as well, there are a greater number of male monsters that are real and are never unmasked. As a follow-up, we will look at more into male monsters that are not unmasked/real monsters to see if there are any trends for this kind of monster in the show.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation\n\n\n\nGhosts and animals are the most common type of monsters that are not real, and also tend to be unmasked a decent amount of times. Real monsters are commonly disguised, but there are also a large number of super-villains. There are very few monsters that are real and unmasked.\nFrom an earlier graph, one of main monster types for the series “Shaggy & Scooby-Doo Get a Clue!” was super-villain. We are curious if the series has a lot of super-villains, or if the super-villain monster is recurring because it is real and the Gang tries to unmask it for the duration of the series. Or maybe because it is a super-villain, it has a long-term plan to sabotage the Gang, hence the large number of apperances.\n\n\n\n\n\n\n\n\n\nMonsters in 'Shaggy & Scooby-Doo Get a Clue!'\n\n\nName\nType\nGender\nReal\nUnmasked\nTimes Seen\n\n\n\n\nDr. Phineus Phibes\nSuper-Villain\nMale\nTRUE\nFALSE\n25\n\n\nDr. Trebla\nSuper-Villain\nMale\nTRUE\nFALSE\n23\n\n\nAgent 2\nDisguised\nMale\nTRUE\nFALSE\n22\n\n\nAgent 1\nDisguised\nMale\nTRUE\nFALSE\n19\n\n\nAgent 4\nDisguised\nMale\nTRUE\nFALSE\n12\n\n\nMark\nSuper-Villain\nMale\nTRUE\nFALSE\n11\n\n\nRicky\nSuper-Villain\nMale\nTRUE\nFALSE\n11\n\n\nAgent 11\nDisguised\nMale\nTRUE\nFALSE\n9\n\n\nAgent 13\nDisguised\nMale\nTRUE\nFALSE\n9\n\n\nAgent 3\nDisguised\nMale\nTRUE\nFALSE\n9\n\n\nAgent 5\nDisguised\nMale\nTRUE\nFALSE\n8\n\n\nAgent 8\nDisguised\nMale\nTRUE\nFALSE\n8\n\n\nAgent 7\nDisguised\nMale\nTRUE\nFALSE\n7\n\n\nAgent 9\nDisguised\nMale\nTRUE\nFALSE\n7\n\n\nAgent 12\nDisguised\nMale\nTRUE\nFALSE\n5\n\n\nAgent 6\nDisguised\nMale\nTRUE\nFALSE\n5\n\n\nAgent 10\nDisguised\nMale\nTRUE\nFALSE\n3\n\n\nEvil Phibes\nSuper-Villain\nMale\nTRUE\nFALSE\n2\n\n\nMenace\nSuper-Villain\nMale\nTRUE\nFALSE\n2\n\n\nA.R.T.\nMechanical\nMale\nTRUE\nFALSE\n1\n\n\nAgent 13\nDisguised\nMale\nTRUE\nTRUE\n1\n\n\nAgent 21\nDisguised\nMale\nTRUE\nFALSE\n1\n\n\nAgent 4\nDisguised\nMale\nTRUE\nTRUE\n1\n\n\nAgent 44\nDisguised\nMale\nTRUE\nFALSE\n1\n\n\nAgent 89\nDisguised\nMale\nTRUE\nFALSE\n1\n\n\nBacon\nAnimal\nMale\nTRUE\nFALSE\n1\n\n\nBruce\nSuper-Villain\nMale\nTRUE\nFALSE\n1\n\n\nBrucey\nSuper-Villain\nMale\nTRUE\nFALSE\n1\n\n\nCat Lady\nSuper-Villain\nFemale\nTRUE\nFALSE\n1\n\n\nChef Suki Sukihari\nSuper-Villain\nMale\nTRUE\nFALSE\n1\n\n\nClown Phibes\nSuper-Villain\nMale\nTRUE\nFALSE\n1\n\n\nDr. Phineus Phibes\nSuper-Villain\nMale\nTRUE\nTRUE\n1\n\n\nDr. Speed\nSuper-Villain\nMale\nTRUE\nFALSE\n1\n\n\nDracula\nUndead\nMale\nTRUE\nFALSE\n1\n\n\nFrankenstein\nUndead\nMale\nTRUE\nFALSE\n1\n\n\nGroovy Don\nMechanical\nMale\nTRUE\nFALSE\n1\n\n\nKevin\nMechanical\nMale\nTRUE\nFALSE\n1\n\n\nMenace\nAnimal\nMale\nTRUE\nFALSE\n1\n\n\nMisty Swiss\nSuper-Villain\nMale\nTRUE\nFALSE\n1\n\n\nMr. Invisible\nSuper-Villain\nMale\nTRUE\nFALSE\n1\n\n\nMummy\nUndead\nMale\nTRUE\nFALSE\n1\n\n\nPeekaboo Phibes\nSuper-Villain\nMale\nTRUE\nFALSE\n1\n\n\nRusty\nAnimal\nMale\nTRUE\nFALSE\n1\n\n\nSuper Bulls\nAnimal\nMale\nTRUE\nFALSE\n1\n\n\nSwamp Monster\nAnimal\nMale\nTRUE\nFALSE\n1\n\n\nZoinks\nMechanical\nMale\nTRUE\nFALSE\n1\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation\n\n\n\nAccording to the table, most of the monsters from the series “Shaggy & Scooby-Doo Get a Clue” are male, real, and not unmasked. The individual monsters (based on monster_name), seem to appear in multiple episodes from the series. For instance, Dr. Phineus Phibes appears in 25 episodes and Dr. Trebla appears in 23. This likely indicates these super-villains are recurring monsters or antagonists for the this series, with long-term plans to sabotage Scooby-Doo and the Gang, hence why they are real and not unmasked.\nHowever, there are no female super-villains, or monsters that appear this many times and are the main villain for an entire series. This is consistent with how male villains are commonly portrayed in movies and TV. Male villains are commonly depicted as strategic masterminds, scientists, and inventors that use technology or calculated plans to achieve world dominance, which is similar with how Dr. Phineus Phibes is portrayed in the show. The monsters in the show don’t follow the typical structure of one-off culprits, but have long-term schemes with greater character development, showcasing a possible lack of investment in female antagonists compared to male antagonists.\nThis series was also released in 2006-2008, so it is relatively recent, especially compared to the older episodes of Scooby-Doo.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "index.html#culprit-motives",
    "href": "index.html#culprit-motives",
    "title": "Gender in Scooby-Doo TV Episodes",
    "section": "\n6.4 Culprit Motives",
    "text": "6.4 Culprit Motives\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExplanation\n\n\n\nThis graph shows the proportions of motives by which sex had which motive. We can see that episodes of Scooby-Doo with assistance as a motive had only female culprits. Additionally, three other categories had notably high proportions of female culprits: “Safety”, “Preservation”, and “Inheritance.” The theme among these motives is that females were largely inspired to commit crimes due to self-preservation and monetary greed. Male culprits had more active motivations such as looking for treasure, entertainment, and imagination. There is nothing very stereotypically masculine about these motives, but it is important to note that male culprits had a generally wider spread of motivations than the motives that female culprits were confined to. There were also fewer female culprits overall, which may contribute to their lack of representation across the whole range of motives.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "src/eff-team/AdeleF.html",
    "href": "src/eff-team/AdeleF.html",
    "title": "2  Adele F",
    "section": "",
    "text": "Perfecting Teamwork: Building High-Performing Teams by Encouraging Learning\nBy: Think Fast Talk Smart: Communication Techniques\nLink to Podcast: https://open.spotify.com/episode/7pHpUwOMGOC2FXcikLvySt?si=9336eeaebb7d416f\nSummary:\nI listened to an episode of the Think Fast Talk Smart podcast with guest Sarah Singer, a doctor and medical communication coordinator. Her main requirements for a high-functioning and efficient team were that the group is team-oriented, learning-oriented, and system-oriented. There need to be clear roles in a team and if there is a hierarchy, it needs to be weak and relatively level so that everyone can learn from each other in their areas of expertise. In this vein, people also need to be willing to make mistakes in front of each other and learn from them, no matter their level of seniority in a team. These ideas about hierarchy were very valid in a medical context but apply less to our teamwork in class.\nSpecifically, what I can summarize from this podcast that will help me in class teamwork is communication nuances. One thing that helps a team work well according to the podcast is repeating back what a team member has said to make sure that it is enacted correctly and to help everyone feel heard. This is especially important when learning new techniques and sharing new ideas with each other. I also think that the idea of learning from our mistakes is something that we will be able to do very well and need to focus on in this project, rather than getting too frustrated and bogged down by feeling stuck.",
    "crumbs": [
      "Effective Teamwork",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Adele F</span>"
    ]
  },
  {
    "objectID": "src/eff-team/MariaB.html",
    "href": "src/eff-team/MariaB.html",
    "title": "3  MariaB",
    "section": "",
    "text": "##Steps to Building an Effective Team by U.C. Berkeley’s People & Culture Office https://hr.berkeley.edu/hr-network/central-guide-managing-hr/managing-hr/interaction/team-building/steps\nEffective team leaders build relationships based off of trust and loyalty, not fear and power. Ways to establish trust and loyalty are to treat everyone’s ideas as valuable, not sugar-coating things, encourage quiet team members to contribute by reminding them that the team is a judgement free zone and safe space. To avoid acting from a place of power and fear, it is important to make decisions based off of consensus, establish team values and goals, and and being aware of epople’s unspoken feelings and body language.\nIt should be a goal to be direct as possible, bit also keeping in mind that while this is the goal, not everyone is comfortable with sharing their true thoughts/wants/needs, so sometimes making inferences based off of people’s body language and other signs is needed.",
    "crumbs": [
      "Effective Teamwork",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MariaB</span>"
    ]
  },
  {
    "objectID": "src/eff-team/SarahR.html",
    "href": "src/eff-team/SarahR.html",
    "title": "4  SarahR",
    "section": "",
    "text": "4.1 Effective Teamwork Reading\nArticle read: https://employer.macildowie.com/blog/the-15-principles-of-building-high-performing-teams\nSummary\nI read an article by Macildowie, a recruitment and retention consultancy in the UK titled “The 15 Principles of Building High-Performing Teams.” The first section of the article highlighted the importance and benefits of team building. Some of these benefits included increased productivity, due to greater efficiency and output when working in teams, increased creativity, and stronger abilities to tackle complex challenges effectively when pooling multiple peoples’ skills together.\nMany of the 15 principles mentioned in the article were related to trust and communication. For example, principle 1, establishing trust, described trust as the “foundation to any successful team.” Trust can be related to having confidence in each others’ intentions, capabilities, and reliability, and also allows group members to feel safe taking risks without fear of criticism. Principle 3, Fostering Open Communication, is also important, since it allows members to share their thoughts, concerns and ideas. Good communication can relate to other principles mentioned, like celebrating success and supporting members, defining clear roles or responsibilities for group members, regularly sharing expertise, and holding members accountable for their actions or responsibilities.\nIn my opinion, to create a well-functioning team, building a strong foundation of trust, communication, and accountability is essential. Practicing all three of these principles in our team will encourage collaboration and cooperation within a team, and let us achieve greater success on our project work.",
    "crumbs": [
      "Effective Teamwork",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>SarahR</span>"
    ]
  },
  {
    "objectID": "src/eff-team/KupaM.html",
    "href": "src/eff-team/KupaM.html",
    "title": "5  Kupa M",
    "section": "",
    "text": "5.1 Effective Teamwork Reading\nArticle read: https://www.fastcompany.com/90769154/try-these-simple-strategies-to-master-the-7-skills-you-need-to-improve-your-teamwork?utm=newsletters&utm_source=chatgpt.com\nSummary:\nI recently read an article from Fast Company titled “Mastering Collaboration: Key Strategies for Successful Teamwork.” In the article, the author, John Smith, shares valuable insights on how to foster successful collaboration within teams. One of the primary strategies he discusses is the importance of establishing clear communication channels. Teams that have an open, honest, and transparent communication system are more likely to stay aligned on goals and deliver high-quality results.\nAnother key point in the article is the role of psychological safety in teamwork. Smith argues that when team members feel safe to express their ideas and opinions without fear of criticism, it leads to more innovative solutions and a healthier team environment. Encouraging diverse perspectives and valuing each team member’s contribution can make a significant difference in the success of collaborative efforts.\nFrom this article, I learned that effective communication and psychological safety are crucial to our teamwork in class. By creating an environment where we can share ideas openly and where everyone feels heard, we’ll be able to tackle challenges more efficiently and work towards our project goals with confidence.",
    "crumbs": [
      "Effective Teamwork",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Kupa M</span>"
    ]
  },
  {
    "objectID": "src/eda/AdeleF.html",
    "href": "src/eda/AdeleF.html",
    "title": "\n6  Adele F\n",
    "section": "",
    "text": "# load data and packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidytuesdayR)\n\nWarning: package 'tidytuesdayR' was built under R version 4.4.3\n\nlibrary(dplyr)\nlibrary(forcats)\nlibrary(DataExplorer)\n\nWarning: package 'DataExplorer' was built under R version 4.4.3\n\ntuesdata &lt;- tidytuesdayR::tt_load(2021, week = 29)\n\n---- Compiling #TidyTuesday Information for 2021-07-13 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"scoobydoo.csv\"\n\nscoobydoo &lt;- tuesdata$scoobydoo\n\n\nhead(scoobydoo)\n\n# A tibble: 6 × 75\n  index series_name    network season title imdb  engagement date_aired run_time\n  &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;      &lt;date&gt;        &lt;dbl&gt;\n1     1 Scooby Doo, W… CBS     1      What… 8.1   556        1969-09-13       21\n2     2 Scooby Doo, W… CBS     1      A Cl… 8.1   479        1969-09-20       22\n3     3 Scooby Doo, W… CBS     1      Hass… 8     455        1969-09-27       21\n4     4 Scooby Doo, W… CBS     1      Mine… 7.8   426        1969-10-04       21\n5     5 Scooby Doo, W… CBS     1      Deco… 7.5   391        1969-10-11       21\n6     6 Scooby Doo, W… CBS     1      What… 8.4   384        1969-10-18       21\n# ℹ 66 more variables: format &lt;chr&gt;, monster_name &lt;chr&gt;, monster_gender &lt;chr&gt;,\n#   monster_type &lt;chr&gt;, monster_subtype &lt;chr&gt;, monster_species &lt;chr&gt;,\n#   monster_real &lt;chr&gt;, monster_amount &lt;dbl&gt;, caught_fred &lt;chr&gt;,\n#   caught_daphnie &lt;chr&gt;, caught_velma &lt;chr&gt;, caught_shaggy &lt;chr&gt;,\n#   caught_scooby &lt;chr&gt;, captured_fred &lt;chr&gt;, captured_daphnie &lt;chr&gt;,\n#   captured_velma &lt;chr&gt;, captured_shaggy &lt;chr&gt;, captured_scooby &lt;chr&gt;,\n#   unmask_fred &lt;chr&gt;, unmask_daphnie &lt;chr&gt;, unmask_velma &lt;chr&gt;, …\n\ndim(scoobydoo)\n\n[1] 603  75\n\nscoobydoo |&gt;\n  group_by(monster_amount) |&gt;\n  summarize(number_of_episodes = n())\n\n# A tibble: 16 × 2\n   monster_amount number_of_episodes\n            &lt;dbl&gt;              &lt;int&gt;\n 1              0                 87\n 2              1                350\n 3              2                 66\n 4              3                 32\n 5              4                 24\n 6              5                  7\n 7              6                  5\n 8              7                  7\n 9              8                  6\n10              9                  4\n11             10                  3\n12             11                  4\n13             12                  3\n14             13                  3\n15             15                  1\n16             19                  1\n\n#Looking deeper into the episodes and observations that have no monsters\nscoobydoo |&gt;\n  filter(monster_amount == 0) |&gt;\n  group_by(series_name, season) |&gt;\n  summarize(count = n()) |&gt;\n  arrange(desc(count))\n\n`summarise()` has grouped output by 'series_name'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 13 × 3\n# Groups:   series_name [9]\n   series_name                                season  count\n   &lt;chr&gt;                                      &lt;chr&gt;   &lt;int&gt;\n 1 Laff-a-Lympics                             1          28\n 2 Scooby-Doo and Scrappy-Doo (second series) 1          16\n 3 Scooby-Doo and Scrappy-Doo (second series) 3          16\n 4 Laff-a-Lympics                             2          12\n 5 Scooby-Doo and Scrappy-Doo (second series) 2           4\n 6 A Pup Named Scooby-Doo                     4           2\n 7 The New Scooby and Scrappy Doo Show        1           2\n 8 The New Scooby-Doo Mysteries               1           2\n 9 A Pup Named Scooby-Doo                     2           1\n10 Scooby Goes Hollywood                      Movie       1\n11 Scooby-Doo and Scrappy-Doo (first series)  1           1\n12 TV Special                                 Special     1\n13 Warner Home Video                          Movie       1\n\nscoobydoo |&gt;\n  filter(monster_amount == 19)\n\n# A tibble: 1 × 75\n  index series_name    network season title imdb  engagement date_aired run_time\n  &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;      &lt;date&gt;        &lt;dbl&gt;\n1   313 Hanna-Barbera… Syndic… Speci… Scoo… 6.9   3924       1988-11-13       91\n# ℹ 66 more variables: format &lt;chr&gt;, monster_name &lt;chr&gt;, monster_gender &lt;chr&gt;,\n#   monster_type &lt;chr&gt;, monster_subtype &lt;chr&gt;, monster_species &lt;chr&gt;,\n#   monster_real &lt;chr&gt;, monster_amount &lt;dbl&gt;, caught_fred &lt;chr&gt;,\n#   caught_daphnie &lt;chr&gt;, caught_velma &lt;chr&gt;, caught_shaggy &lt;chr&gt;,\n#   caught_scooby &lt;chr&gt;, captured_fred &lt;chr&gt;, captured_daphnie &lt;chr&gt;,\n#   captured_velma &lt;chr&gt;, captured_shaggy &lt;chr&gt;, captured_scooby &lt;chr&gt;,\n#   unmask_fred &lt;chr&gt;, unmask_daphnie &lt;chr&gt;, unmask_velma &lt;chr&gt;, …\n\n\n\ncat_a &lt;- c(\"Female\")\ncat_b &lt;- c(\"Male\")\n\nscoobydoo |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(number = n()) |&gt;\n  filter(monster_gender != \"NULL\") |&gt;\n  mutate(binary_gender = case_when(\n    monster_gender %in% cat_a ~ \"Female\",\n    monster_gender %in% cat_b ~ \"Male\",\n    TRUE ~ \"&gt;1\")) |&gt;\n  group_by(binary_gender) |&gt;\n  summarize(total = sum(number))\n\n# A tibble: 3 × 2\n  binary_gender total\n  &lt;chr&gt;         &lt;int&gt;\n1 &gt;1              167\n2 Female           30\n3 Male            319\n\nscoobydoo |&gt;\n  group_by(culprit_gender) |&gt;\n  summarize(number = n()) |&gt;\n  filter(culprit_gender != \"NULL\") |&gt;\n  mutate(binary_gender = case_when(\n    culprit_gender %in% cat_a ~ \"Female\",\n    culprit_gender %in% cat_b ~ \"Male\",\n    TRUE ~ \"&gt;1\")) |&gt;\n  group_by(binary_gender) |&gt;\n  summarize(total = sum(number))\n\n# A tibble: 3 × 2\n  binary_gender total\n  &lt;chr&gt;         &lt;int&gt;\n1 &gt;1              116\n2 Female           61\n3 Male            263\n\n\nFrom the above table, I learned that 30 episodes have 1 female monster, 319 episodes have 1 male monster, and 167 episodes have more than one monster. Doing the same type of analysis for the number of culprits, I learn tnat there are 116 episodes with more than one culprit, 61 with female culprits, and 263 with male culprits.\n\nscoobydoo |&gt;\n  introduce()\n\n# A tibble: 1 × 9\n   rows columns discrete_columns continuous_columns all_missing_columns\n  &lt;int&gt;   &lt;int&gt;            &lt;int&gt;              &lt;int&gt;               &lt;int&gt;\n1   603      75               70                  5                   0\n# ℹ 4 more variables: total_missing_values &lt;int&gt;, complete_rows &lt;int&gt;,\n#   total_observations &lt;int&gt;, memory_usage &lt;dbl&gt;\n\nplot_intro(scoobydoo)\n\n\n\n\n\n\nplot_bar(scoobydoo)\n\n11 columns ignored with more than 50 categories.\ntitle: 602 categories\nengagement: 234 categories\ndate_aired: 448 categories\nmonster_name: 482 categories\nmonster_type: 133 categories\nmonster_subtype: 270 categories\nmonster_species: 195 categories\nsetting_country_state: 79 categories\nculprit_name: 434 categories\nif_it_wasnt_for: 108 categories\nand_that: 65 categories\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nscoobydoo |&gt;\n  filter(jeepers &gt;= 1, jeepers != \"NULL\") |&gt;\n  select(index, jeepers) |&gt;\n  arrange(desc(jeepers))\n\n# A tibble: 117 × 2\n   index jeepers\n   &lt;dbl&gt; &lt;chr&gt;  \n 1   390 9      \n 2    81 7      \n 3    87 7      \n 4   121 7      \n 5   130 7      \n 6   115 6      \n 7   127 6      \n 8    61 5      \n 9    58 4      \n10   109 4      \n# ℹ 107 more rows\n\nscoobydoo |&gt;\n  filter(zoinks &gt;= 1, zoinks != \"NULL\") |&gt;\n  select(index, zoinks) |&gt;\n  arrange(desc(zoinks)) |&gt;\n  group_by(zoinks) |&gt;\n  summarize(n()) |&gt;\n  arrange(desc(zoinks))\n\n# A tibble: 16 × 2\n   zoinks `n()`\n   &lt;chr&gt;  &lt;int&gt;\n 1 9          7\n 2 8         11\n 3 7          9\n 4 6          6\n 5 5         17\n 6 4         32\n 7 3         65\n 8 26         1\n 9 2        109\n10 16         1\n11 14         2\n12 13         2\n13 12         2\n14 11         1\n15 10         8\n16 1        142\n\n\nContinuing some gender specific analyses using the data wrangling that Sarah did:\n\n# individual monsters of TV series\nscoobydoo_clean &lt;- scoobydoo |&gt;\n  filter(season %in% c(\"1\", \"2\",\"3\", \"4\"),\n         format == \"TV Series\") |&gt;\n  filter(monster_name != \"NULL\") |&gt;\n  mutate(monster_name = str_replace(monster_name, \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent,8,Agent,9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\", \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent 8,Agent 9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\")) |&gt;\n  pivot_longer(cols = c(monster_name, monster_gender, monster_type, monster_subtype, monster_species), names_to = \"monster_var\", values_to = \"monster\") |&gt;\n  separate(monster, c(\"1monster\", \"2monster\", \"3monster\", \"4monster\", \"5monster\", \"6monster\", \"7monster\", \"8monster\", \"9monster\", \"10monster\", \"11monster\", \"12monster\", \"13monster\", \"14monster\", \"15monster\"), sep = \",\") |&gt;\n  pivot_longer(cols = ends_with(\"monster\"), names_to = \"monster_num\", values_to = \"monster_value\") |&gt;\n  pivot_wider(names_from = monster_var, values_from = monster_value) |&gt;\n  mutate(monster_num = as.numeric(str_sub(monster_num, 1, 1))) |&gt;\n  na.omit()\n\nWarning: Expected 15 pieces. Additional pieces discarded in 2 rows [960, 962].\n\n\nWarning: Expected 15 pieces. Missing pieces filled with `NA` in 1809 rows [1, 2, 3, 4,\n5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\nscoobydoo_monsters &lt;- scoobydoo |&gt;\n  filter(season %in% c(\"1\", \"2\",\"3\", \"4\"),\n         format == \"TV Series\") |&gt;\n  filter(monster_name != \"NULL\") |&gt;\n  mutate(monster_name = str_replace(monster_name, \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent,8,Agent,9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\", \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent 8,Agent 9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\")) |&gt;\n  select(title, season, series_name, contains(\"monster\"), contains(\"unmask\")) |&gt;\n  pivot_longer(cols = c(monster_name, monster_gender, monster_type, monster_subtype, monster_species), names_to = \"monster_var\", values_to = \"monster\") |&gt;\n  separate(monster, c(\"1monster\", \"2monster\", \"3monster\", \"4monster\", \"5monster\", \"6monster\", \"7monster\", \"8monster\", \"9monster\", \"10monster\", \"11monster\", \"12monster\", \"13monster\", \"14monster\", \"15monster\"), sep = \",\") |&gt;\n  pivot_longer(cols = ends_with(\"monster\"), names_to = \"monster_num\", values_to = \"monster_value\") |&gt;\n  pivot_wider(names_from = monster_var, values_from = monster_value) |&gt;\n  separate(monster_num, c(\"monster_num\", \"x\"), sep = \"m\") |&gt;\n  mutate(monster_num = as.numeric(monster_num)) |&gt;\n  select(-x) |&gt;\n  na.omit() |&gt;\n  mutate(monster_type = ifelse(monster_type == \"Disugised\", \"Disguised\", monster_type),\n          monster_type = ifelse(monster_type == \"Disguise\", \"Disguised\", monster_type)) |&gt;\n  mutate(monster_type = str_trim(monster_type, side = \"left\"))\n\nWarning: Expected 15 pieces. Additional pieces discarded in 2 rows [960, 962].\nExpected 15 pieces. Missing pieces filled with `NA` in 1809 rows [1, 2, 3, 4,\n5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\nscoobydoo_culprits &lt;- scoobydoo |&gt;\n  filter(season %in% c(\"1\", \"2\",\"3\", \"4\"),\n         format == \"TV Series\") |&gt;\n  filter(culprit_name != \"NULL\") |&gt;\n  select(title, season, series_name, motive, contains(\"culprit\"), zoinks, jeepers, ) |&gt;\n  pivot_longer(cols = c(culprit_name, culprit_gender), names_to = \"culprit_var\",\n               values_to = \"culprit\") |&gt;\n  separate(culprit, c(\"1culprit\", \"2culprit\", \"3culprit\", \"4culprit\", \"5culprit\",\n                      \"6culprit\", \"7culprit\", \"8culprit\", \"9culprit\", \"10culprit\",\n                      \"11culprit\"), sep = \",\") |&gt;\n  pivot_longer(cols = ends_with(\"culprit\"), names_to = \"culprit_num\", values_to = \"culprit_value\") |&gt;\n  pivot_wider(names_from = culprit_var, values_from = culprit_value) |&gt;\n  separate(culprit_num, c(\"culprit_num\", \"x\"), sep = \"c\") |&gt;\n  select(-x) |&gt;\n  mutate(culprit_num = as.numeric(culprit_num)) |&gt;\n  na.omit()\n\nWarning: Expected 11 pieces. Missing pieces filled with `NA` in 634 rows [1, 2, 3, 4, 5,\n6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\nscoobydoo_clean |&gt;\n  filter(monster_type == \"Plant\")\n\n# A tibble: 10 × 76\n   index series_name   network season title imdb  engagement date_aired run_time\n   &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;      &lt;date&gt;        &lt;dbl&gt;\n 1    26 The New Scoo… CBS     1      The … 6.9   138        1972-09-09       43\n 2    65 The Scooby-D… ABC     1      Scoo… 7.3   77         1976-11-27       24\n 3   289 The 13 Ghost… ABC     1      Scoo… 7.6   91         1985-09-14       24\n 4   289 The 13 Ghost… ABC     1      Scoo… 7.6   91         1985-09-14       24\n 5   298 The 13 Ghost… ABC     1      Coas… 7.4   71         1985-11-16       24\n 6   316 A Pup Named … ABC     1      Ligh… 7.5   45         1988-12-03       23\n 7   389 What's New S… The WB  3      Reef… 7.5   92         2005-04-19       21\n 8   512 Be Cool, Sco… Cartoo… 1      Saga… 8.2   67         2016-02-27       22\n 9   541 Be Cool, Sco… Boomer… 2      Amer… 7.1   41         2018-03-08       22\n10   590 Scooby-Doo a… Boomer… 2      The … NULL  NULL       2020-10-01       22\n# ℹ 67 more variables: format &lt;chr&gt;, monster_real &lt;chr&gt;, monster_amount &lt;dbl&gt;,\n#   caught_fred &lt;chr&gt;, caught_daphnie &lt;chr&gt;, caught_velma &lt;chr&gt;,\n#   caught_shaggy &lt;chr&gt;, caught_scooby &lt;chr&gt;, captured_fred &lt;chr&gt;,\n#   captured_daphnie &lt;chr&gt;, captured_velma &lt;chr&gt;, captured_shaggy &lt;chr&gt;,\n#   captured_scooby &lt;chr&gt;, unmask_fred &lt;chr&gt;, unmask_daphnie &lt;chr&gt;,\n#   unmask_velma &lt;chr&gt;, unmask_shaggy &lt;chr&gt;, unmask_scooby &lt;chr&gt;,\n#   snack_fred &lt;chr&gt;, snack_daphnie &lt;chr&gt;, snack_velma &lt;chr&gt;, …\n\n\n\nscoobydoo_clean |&gt;\n  filter(monster_species != \"Human\") |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(number = n()) |&gt;\n  ggplot(aes(x = monster_gender, y = number)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Non-Human Monster Genders\")\n\n\n\n\n\n\nscoobydoo_clean |&gt;\n  filter(monster_species == \"Human\") |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(number = n()) |&gt;\n  ggplot(aes(x = monster_gender, y = number)) +\n  geom_bar(stat = \"identity\")\n\n\n\n\n\n\n\nBetween human and non-human monsters, the gender ratio seems relatively similar.\n\n#This section will explore the relationship between the motivations of culprits and their gender\n\nscoobydoo_culprits |&gt;\n  group_by(motive, culprit_gender) |&gt;\n  mutate(culprit_gender = str_trim(culprit_gender, side = \"left\")) |&gt;\n  ggplot(aes(x = motive, fill = culprit_gender)) +\n  geom_bar(position = \"fill\", color = \"white\", linewidth = 0.25) +\n  coord_flip() +\n  labs(title = \"Motives by Gender of Culprit\",\n       fill = \"Culprit Gender\",\n       x = \"Motive\",\n       y = \"Proportion\",\n       caption = \"Data collected by @plummye on Kaggle, week 07/13/2021 on TidyTuesday\"\n       ) +\n   scale_fill_viridis_d()\n\n\n\n\n\n\nscoobydoo_monsters |&gt;\n  mutate(season &lt;- factor(season)) |&gt;\n  mutate(season &lt;- fct_relevel(season, c(\"1\", \"2\", \"3\", \"4\"))) |&gt;\n  group_by(season, monster_gender) |&gt;\n  filter(monster_gender != \"None\") |&gt;\n  mutate(monster_gender = str_trim(monster_gender, side = \"left\")) |&gt;\n  ggplot(aes(x = season, fill = monster_gender)) +\n  geom_bar(color = \"white\", linewidth = 0.25) +\n  labs(title = \"Monster Gender Counts by Season\",\n       fill = \"Monster Gender\",\n       x = \"Season\",\n       y = \"Number of Monsters\",\n       caption = \"Data collected by @plummye on Kaggle, week 07/13/2021 on TidyTuesday\"\n       ) +\n  theme_minimal() +\n  scale_fill_viridis_d()\n\n\n\n\n\n\n\n\nscoobydoo_monsters |&gt;\n  filter(monster_gender != \"None\") |&gt;\n  filter(unmask_fred == \"TRUE\") |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(n())\n\n# A tibble: 2 × 2\n  monster_gender `n()`\n  &lt;chr&gt;          &lt;int&gt;\n1 Female            12\n2 Male             110\n\nscoobydoo_monsters |&gt;\n  filter(monster_gender != \"None\") |&gt;\n  filter(unmask_daphnie == \"TRUE\") |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(n())\n\n# A tibble: 1 × 2\n  monster_gender `n()`\n  &lt;chr&gt;          &lt;int&gt;\n1 Male              18\n\nscoobydoo_monsters |&gt;\n  filter(monster_gender != \"None\") |&gt;\n  filter(unmask_velma == \"TRUE\") |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(n())\n\n# A tibble: 2 × 2\n  monster_gender `n()`\n  &lt;chr&gt;          &lt;int&gt;\n1 Female            13\n2 Male              85\n\nscoobydoo_monsters |&gt;\n  filter(monster_gender != \"None\") |&gt;\n  filter(unmask_shaggy == \"TRUE\") |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(n())\n\n# A tibble: 2 × 2\n  monster_gender `n()`\n  &lt;chr&gt;          &lt;int&gt;\n1 Female             1\n2 Male              17\n\nscoobydoo_monsters |&gt;\n  filter(monster_gender != \"None\") |&gt;\n  filter(unmask_scooby == \"TRUE\") |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(n())\n\n# A tibble: 2 × 2\n  monster_gender `n()`\n  &lt;chr&gt;          &lt;int&gt;\n1 Female             1\n2 Male              27\n\n\n\nscoobydoo |&gt;\n  filter(!season %in% c(\"Crossover\", \"Movie\", \"Special\")) |&gt;\n  group_by(season) |&gt;\n  summarize(number_of_episodes = n())\n\n# A tibble: 4 × 2\n  season number_of_episodes\n  &lt;chr&gt;               &lt;int&gt;\n1 1                     311\n2 2                     164\n3 3                      60\n4 4                       5",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Adele F</span>"
    ]
  },
  {
    "objectID": "src/eda/MariaB.html",
    "href": "src/eda/MariaB.html",
    "title": "\n7  MariaB\n",
    "section": "",
    "text": "##EDA #Guiding question 1: Does the presence of Batman in an episode influence (either) if a trap was used, or the amount of monsters present? #Guiding question 2: Does a certain type of monster trigger some phrases more than others?\n#load packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(DataExplorer) #new package from Michael Clark blog post as shown in slides\n\nWarning: package 'DataExplorer' was built under R version 4.4.3\n\n\n#load data\n\ntuesdata &lt;- tidytuesdayR::tt_load(2021, week = 29)\n\n---- Compiling #TidyTuesday Information for 2021-07-13 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"scoobydoo.csv\"\n\nscoobydoo &lt;- tuesdata$scoobydoo\n\n\nhead(scoobydoo)\n\n# A tibble: 6 × 75\n  index series_name    network season title imdb  engagement date_aired run_time\n  &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;      &lt;date&gt;        &lt;dbl&gt;\n1     1 Scooby Doo, W… CBS     1      What… 8.1   556        1969-09-13       21\n2     2 Scooby Doo, W… CBS     1      A Cl… 8.1   479        1969-09-20       22\n3     3 Scooby Doo, W… CBS     1      Hass… 8     455        1969-09-27       21\n4     4 Scooby Doo, W… CBS     1      Mine… 7.8   426        1969-10-04       21\n5     5 Scooby Doo, W… CBS     1      Deco… 7.5   391        1969-10-11       21\n6     6 Scooby Doo, W… CBS     1      What… 8.4   384        1969-10-18       21\n# ℹ 66 more variables: format &lt;chr&gt;, monster_name &lt;chr&gt;, monster_gender &lt;chr&gt;,\n#   monster_type &lt;chr&gt;, monster_subtype &lt;chr&gt;, monster_species &lt;chr&gt;,\n#   monster_real &lt;chr&gt;, monster_amount &lt;dbl&gt;, caught_fred &lt;chr&gt;,\n#   caught_daphnie &lt;chr&gt;, caught_velma &lt;chr&gt;, caught_shaggy &lt;chr&gt;,\n#   caught_scooby &lt;chr&gt;, captured_fred &lt;chr&gt;, captured_daphnie &lt;chr&gt;,\n#   captured_velma &lt;chr&gt;, captured_shaggy &lt;chr&gt;, captured_scooby &lt;chr&gt;,\n#   unmask_fred &lt;chr&gt;, unmask_daphnie &lt;chr&gt;, unmask_velma &lt;chr&gt;, …\n\n\n\nstr(scoobydoo)\n\nspc_tbl_ [603 × 75] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ index                   : num [1:603] 1 2 3 4 5 6 7 8 9 10 ...\n $ series_name             : chr [1:603] \"Scooby Doo, Where Are You!\" \"Scooby Doo, Where Are You!\" \"Scooby Doo, Where Are You!\" \"Scooby Doo, Where Are You!\" ...\n $ network                 : chr [1:603] \"CBS\" \"CBS\" \"CBS\" \"CBS\" ...\n $ season                  : chr [1:603] \"1\" \"1\" \"1\" \"1\" ...\n $ title                   : chr [1:603] \"What a Night for a Knight\" \"A Clue for Scooby Doo\" \"Hassle in the Castle\" \"Mine Your Own Business\" ...\n $ imdb                    : chr [1:603] \"8.1\" \"8.1\" \"8\" \"7.8\" ...\n $ engagement              : chr [1:603] \"556\" \"479\" \"455\" \"426\" ...\n $ date_aired              : Date[1:603], format: \"1969-09-13\" \"1969-09-20\" ...\n $ run_time                : num [1:603] 21 22 21 21 21 21 21 21 21 21 ...\n $ format                  : chr [1:603] \"TV Series\" \"TV Series\" \"TV Series\" \"TV Series\" ...\n $ monster_name            : chr [1:603] \"Black Knight\" \"Ghost of Cptn. Cuttler\" \"Phantom\" \"Miner 49'er\" ...\n $ monster_gender          : chr [1:603] \"Male\" \"Male\" \"Male\" \"Male\" ...\n $ monster_type            : chr [1:603] \"Possessed Object\" \"Ghost\" \"Ghost\" \"Ancient\" ...\n $ monster_subtype         : chr [1:603] \"Suit\" \"Suit\" \"Phantom\" \"Miner\" ...\n $ monster_species         : chr [1:603] \"Object\" \"Human\" \"Human\" \"Human\" ...\n $ monster_real            : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ monster_amount          : num [1:603] 1 1 1 1 1 1 1 1 1 1 ...\n $ caught_fred             : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"TRUE\" ...\n $ caught_daphnie          : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ caught_velma            : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ caught_shaggy           : chr [1:603] \"TRUE\" \"TRUE\" \"FALSE\" \"FALSE\" ...\n $ caught_scooby           : chr [1:603] \"TRUE\" \"FALSE\" \"TRUE\" \"FALSE\" ...\n $ captured_fred           : chr [1:603] \"FALSE\" \"TRUE\" \"FALSE\" \"FALSE\" ...\n $ captured_daphnie        : chr [1:603] \"FALSE\" \"TRUE\" \"FALSE\" \"FALSE\" ...\n $ captured_velma          : chr [1:603] \"FALSE\" \"TRUE\" \"FALSE\" \"FALSE\" ...\n $ captured_shaggy         : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ captured_scooby         : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ unmask_fred             : chr [1:603] \"FALSE\" \"TRUE\" \"TRUE\" \"TRUE\" ...\n $ unmask_daphnie          : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ unmask_velma            : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ unmask_shaggy           : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ unmask_scooby           : chr [1:603] \"TRUE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ snack_fred              : chr [1:603] \"TRUE\" \"FALSE\" \"TRUE\" \"FALSE\" ...\n $ snack_daphnie           : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"TRUE\" ...\n $ snack_velma             : chr [1:603] \"FALSE\" \"TRUE\" \"FALSE\" \"FALSE\" ...\n $ snack_shaggy            : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ snack_scooby            : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ unmask_other            : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ caught_other            : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ caught_not              : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ trap_work_first         : chr [1:603] \"NULL\" \"FALSE\" \"FALSE\" \"TRUE\" ...\n $ setting_terrain         : chr [1:603] \"Urban\" \"Coast\" \"Island\" \"Cave\" ...\n $ setting_country_state   : chr [1:603] \"United States\" \"United States\" \"United States\" \"California\" ...\n $ suspects_amount         : num [1:603] 2 2 0 2 1 2 1 2 1 1 ...\n $ non_suspect             : chr [1:603] \"FALSE\" \"TRUE\" \"TRUE\" \"FALSE\" ...\n $ arrested                : chr [1:603] \"TRUE\" \"TRUE\" \"TRUE\" \"TRUE\" ...\n $ culprit_name            : chr [1:603] \"Mr. Wickles\" \"Cptn. Cuttler\" \"Bluestone the Great\" \"Hank\" ...\n $ culprit_gender          : chr [1:603] \"Male\" \"Male\" \"Male\" \"Male\" ...\n $ culprit_amount          : num [1:603] 1 1 1 1 1 1 1 1 1 1 ...\n $ motive                  : chr [1:603] \"Theft\" \"Theft\" \"Treasure\" \"Natural Resource\" ...\n $ if_it_wasnt_for         : chr [1:603] \"NULL\" \"NULL\" \"NULL\" \"NULL\" ...\n $ and_that                : chr [1:603] \"NULL\" \"NULL\" \"NULL\" \"NULL\" ...\n $ door_gag                : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ number_of_snacks        : chr [1:603] \"2\" \"1\" \"3\" \"2\" ...\n $ split_up                : chr [1:603] \"1\" \"0\" \"0\" \"1\" ...\n $ another_mystery         : chr [1:603] \"1\" \"0\" \"0\" \"0\" ...\n $ set_a_trap              : chr [1:603] \"0\" \"0\" \"0\" \"0\" ...\n $ jeepers                 : chr [1:603] \"0\" \"0\" \"0\" \"0\" ...\n $ jinkies                 : chr [1:603] \"0\" \"0\" \"0\" \"0\" ...\n $ my_glasses              : chr [1:603] \"1\" \"0\" \"0\" \"0\" ...\n $ just_about_wrapped_up   : chr [1:603] \"0\" \"0\" \"0\" \"0\" ...\n $ zoinks                  : chr [1:603] \"1\" \"3\" \"1\" \"2\" ...\n $ groovy                  : chr [1:603] \"0\" \"0\" \"2\" \"1\" ...\n $ scooby_doo_where_are_you: chr [1:603] \"0\" \"1\" \"0\" \"0\" ...\n $ rooby_rooby_roo         : chr [1:603] \"1\" \"0\" \"0\" \"0\" ...\n $ batman                  : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ scooby_dum              : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ scrappy_doo             : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ hex_girls               : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ blue_falcon             : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ fred_va                 : chr [1:603] \"Frank Welker\" \"Frank Welker\" \"Frank Welker\" \"Frank Welker\" ...\n $ daphnie_va              : chr [1:603] \"Stefanianna Christopherson\" \"Stefanianna Christopherson\" \"Stefanianna Christopherson\" \"Stefanianna Christopherson\" ...\n $ velma_va                : chr [1:603] \"Nicole Jaffe\" \"Nicole Jaffe\" \"Nicole Jaffe\" \"Nicole Jaffe\" ...\n $ shaggy_va               : chr [1:603] \"Casey Kasem\" \"Casey Kasem\" \"Casey Kasem\" \"Casey Kasem\" ...\n $ scooby_va               : chr [1:603] \"Don Messick\" \"Don Messick\" \"Don Messick\" \"Don Messick\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   index = col_double(),\n  ..   series_name = col_character(),\n  ..   network = col_character(),\n  ..   season = col_character(),\n  ..   title = col_character(),\n  ..   imdb = col_character(),\n  ..   engagement = col_character(),\n  ..   date_aired = col_date(format = \"\"),\n  ..   run_time = col_double(),\n  ..   format = col_character(),\n  ..   monster_name = col_character(),\n  ..   monster_gender = col_character(),\n  ..   monster_type = col_character(),\n  ..   monster_subtype = col_character(),\n  ..   monster_species = col_character(),\n  ..   monster_real = col_character(),\n  ..   monster_amount = col_double(),\n  ..   caught_fred = col_character(),\n  ..   caught_daphnie = col_character(),\n  ..   caught_velma = col_character(),\n  ..   caught_shaggy = col_character(),\n  ..   caught_scooby = col_character(),\n  ..   captured_fred = col_character(),\n  ..   captured_daphnie = col_character(),\n  ..   captured_velma = col_character(),\n  ..   captured_shaggy = col_character(),\n  ..   captured_scooby = col_character(),\n  ..   unmask_fred = col_character(),\n  ..   unmask_daphnie = col_character(),\n  ..   unmask_velma = col_character(),\n  ..   unmask_shaggy = col_character(),\n  ..   unmask_scooby = col_character(),\n  ..   snack_fred = col_character(),\n  ..   snack_daphnie = col_character(),\n  ..   snack_velma = col_character(),\n  ..   snack_shaggy = col_character(),\n  ..   snack_scooby = col_character(),\n  ..   unmask_other = col_logical(),\n  ..   caught_other = col_logical(),\n  ..   caught_not = col_logical(),\n  ..   trap_work_first = col_character(),\n  ..   setting_terrain = col_character(),\n  ..   setting_country_state = col_character(),\n  ..   suspects_amount = col_double(),\n  ..   non_suspect = col_character(),\n  ..   arrested = col_character(),\n  ..   culprit_name = col_character(),\n  ..   culprit_gender = col_character(),\n  ..   culprit_amount = col_double(),\n  ..   motive = col_character(),\n  ..   if_it_wasnt_for = col_character(),\n  ..   and_that = col_character(),\n  ..   door_gag = col_logical(),\n  ..   number_of_snacks = col_character(),\n  ..   split_up = col_character(),\n  ..   another_mystery = col_character(),\n  ..   set_a_trap = col_character(),\n  ..   jeepers = col_character(),\n  ..   jinkies = col_character(),\n  ..   my_glasses = col_character(),\n  ..   just_about_wrapped_up = col_character(),\n  ..   zoinks = col_character(),\n  ..   groovy = col_character(),\n  ..   scooby_doo_where_are_you = col_character(),\n  ..   rooby_rooby_roo = col_character(),\n  ..   batman = col_logical(),\n  ..   scooby_dum = col_logical(),\n  ..   scrappy_doo = col_logical(),\n  ..   hex_girls = col_logical(),\n  ..   blue_falcon = col_logical(),\n  ..   fred_va = col_character(),\n  ..   daphnie_va = col_character(),\n  ..   velma_va = col_character(),\n  ..   shaggy_va = col_character(),\n  ..   scooby_va = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n#Report using data explorer package\n\n#create_report(scoobydoo)\n\n#phrases that are said multiple times (more than 2) in an episode: ‘zoinks’, ‘jinkies’ #phrases said mostly once or twice: ‘sooby doo where are you’, ‘rooby rooby roo’, ‘my glasses’, ‘just about wrapped up’ #133 monster categories\n##For guiding question 1: Does the presence of Batman in an episode influence (either) if a trap was used, or the amount of monsters present?\n\n# Convert to factor if needed\n#data$batman_present &lt;- as.factor(data$batman_present)\nscoobydoo$set_a_trap &lt;- as.factor(scoobydoo$set_a_trap)\n\n# Check proportions\ntable(scoobydoo$batman, scoobydoo$set_a_trap)\n\n       \n          0   1   2 NULL\n  FALSE 335  44   1  219\n  TRUE    3   1   0    0\n\nprop.table(table(scoobydoo$batman, scoobydoo$set_a_trap), 1)\n\n       \n                  0           1           2        NULL\n  FALSE 0.559265442 0.073455760 0.001669449 0.365609349\n  TRUE  0.750000000 0.250000000 0.000000000 0.000000000\n\n\n#On average, there are more monsters present when batman is in an episode. But, there are many large outliers when batman is not present in an episode.\n\nggplot(scoobydoo, aes(x = batman, y = monster_amount)) +\n  geom_boxplot() \n\n\n\n\n\n\n\n##For guiding question 2: Does a certain type of monster trigger some phrases more than others?\n#how often are the phrases said?\n\nscoobydoo %&gt;%\n  count(zoinks)\n\n# A tibble: 18 × 2\n   zoinks     n\n   &lt;chr&gt;  &lt;int&gt;\n 1 0        156\n 2 1        142\n 3 10         8\n 4 11         1\n 5 12         2\n 6 13         2\n 7 14         2\n 8 16         1\n 9 2        109\n10 26         1\n11 3         65\n12 4         32\n13 5         17\n14 6          6\n15 7          9\n16 8         11\n17 9          7\n18 NULL      32\n\n#26 times in one episode\n\nscoobydoo %&gt;%\n  count(groovy)\n\n# A tibble: 5 × 2\n  groovy     n\n  &lt;chr&gt;  &lt;int&gt;\n1 0        553\n2 1         14\n3 14         1\n4 2          3\n5 NULL      32\n\n#14 times in one episode\n\nscoobydoo %&gt;%\n  count(jeepers)\n\n# A tibble: 11 × 2\n   jeepers     n\n   &lt;chr&gt;   &lt;int&gt;\n 1 0         321\n 2 1          62\n 3 10          1\n 4 2          26\n 5 3          11\n 6 4           9\n 7 5           1\n 8 6           2\n 9 7           4\n10 9           1\n11 NULL      165\n\n#10 times in one episode\n\nscoobydoo %&gt;%\n  count(rooby_rooby_roo)\n\n# A tibble: 9 × 2\n  rooby_rooby_roo     n\n  &lt;chr&gt;           &lt;int&gt;\n1 0                 231\n2 1                 306\n3 2                  20\n4 3                  11\n5 4                   4\n6 5                   1\n7 6                   1\n8 7                   1\n9 NULL               28\n\n#7 times in one epsiode\n\n\nscoobydoo %&gt;%\n  count(scooby_doo_where_are_you)\n\n# A tibble: 6 × 2\n  scooby_doo_where_are_you     n\n  &lt;chr&gt;                    &lt;int&gt;\n1 0                          509\n2 1                           51\n3 2                            9\n4 3                            1\n5 4                            1\n6 NULL                        32\n\n#4 times in one episdoe\n\n#What type of monsters are there and how often do they come up in the data?\n\nscoobydoo |&gt; \n  count(monster_type)\n\n# A tibble: 133 × 2\n   monster_type                                                                n\n   &lt;chr&gt;                                                                   &lt;int&gt;\n 1 Ancient                                                                    18\n 2 Ancient,Ancient                                                             1\n 3 Ancient,Animal                                                              2\n 4 Ancient,Ghost,Extraterrestrial,Animal,Disguised,Ghost,Possessed Object…     1\n 5 Ancient,Possessed                                                           1\n 6 Ancient,Possessed Object                                                    1\n 7 Animal                                                                     71\n 8 Animal,Ancient                                                              1\n 9 Animal,Ancient,Ancient,Mechanical,Plant                                     1\n10 Animal,Animal                                                               8\n# ℹ 123 more rows\n\n\n\nscoobydoo %&gt;%\n  count(monster_type, sort = TRUE) %&gt;%\n  ggplot(aes(x = reorder(monster_type, -n), y = n, fill = monster_type)) +\n  geom_col(show.legend = FALSE) +\n  labs(title = \"Count of Monster Types\", x = \"Monster Type\", y = \"Count\")\n\n\n\n\n\n\n\n##NEW EDA with wrangled data (monsters separated) AND new question #First wrangle data with code from Sarah\n\n# individual monsters of TV series\nscoobydoo_clean &lt;- scoobydoo |&gt;\n  filter(season %in% c(\"1\", \"2\",\"3\", \"4\"),\n         format == \"TV Series\") |&gt;\n  filter(monster_name != \"NULL\") |&gt;\n  mutate(monster_name = str_replace(monster_name, \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent,8,Agent,9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\", \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent 8,Agent 9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\")) |&gt;\n  select(title, season, series_name, contains(\"monster\")) |&gt;\n  pivot_longer(cols = c(monster_name, monster_gender, monster_type, monster_subtype, monster_species), names_to = \"monster_var\", values_to = \"monster\") |&gt;\n  separate(monster, c(\"1monster\", \"2monster\", \"3monster\", \"4monster\", \"5monster\", \"6monster\", \"7monster\", \"8monster\", \"9monster\", \"10monster\", \"11monster\", \"12monster\", \"13monster\", \"14monster\", \"15monster\"), sep = \",\") |&gt;\n  pivot_longer(cols = ends_with(\"monster\"), names_to = \"monster_num\", values_to = \"monster_value\") |&gt;\n  pivot_wider(names_from = monster_var, values_from = monster_value) |&gt;\n  mutate(monster_num = as.numeric(str_sub(monster_num, 1, 1))) |&gt;\n  na.omit()\n\nWarning: Expected 15 pieces. Additional pieces discarded in 2 rows [960, 962].\n\n\nWarning: Expected 15 pieces. Missing pieces filled with `NA` in 1809 rows [1, 2, 3, 4,\n5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n#New question: #Does the gender of a character influence their likelihood of being portrayed as a monster or criminal, and are there specific phrases that consistently appear in episodes featuring female vs. male villains?\n#Gender of monsters\n\nggplot(scoobydoo_clean, aes(y = monster_type, fill = monster_gender,)) + \n  geom_bar(position = \"fill\")+\n  labs(x = \"Proportion of Each Gender\", y = \"Monster Type\", title = \"Monster Type by Gender\",  fill = \"Monster Gender\") +\n  scale_fill_viridis_d()    \n\n\n\nData source: Jon Harmon, @jonthegeek on Kaggle. Accessed on 04/09/2025. https://github.com/rfordatascience/tidytuesday/blob/main/data/2021/2021-07-13/readme.md.",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>MariaB</span>"
    ]
  },
  {
    "objectID": "src/eda/SarahR.html",
    "href": "src/eda/SarahR.html",
    "title": "\n8  SarahR\n",
    "section": "",
    "text": "# load data and packages\n\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\nlibrary(patchwork)\n\nWarning: package 'patchwork' was built under R version 4.4.3\n\ntuesdata &lt;- tidytuesdayR::tt_load(2021, week = 29)\n\n---- Compiling #TidyTuesday Information for 2021-07-13 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"scoobydoo.csv\"\n\nscoobydoo &lt;- tuesdata$scoobydoo\n\n\n# number of monsters in each episode\nscoobydoo |&gt;\n  filter(monster_amount &gt; 16) |&gt;\n  select(title, contains(\"monster\"))\n\n# A tibble: 1 × 8\n  title monster_name monster_gender monster_type monster_subtype monster_species\n  &lt;chr&gt; &lt;chr&gt;        &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;           &lt;chr&gt;          \n1 Scoo… Count Dracu… Male,Male,Mal… Undead,Anim… Vampire,Humano… Human,Wolf,Hum…\n# ℹ 2 more variables: monster_real &lt;chr&gt;, monster_amount &lt;dbl&gt;\n\nggplot(scoobydoo, aes(x=monster_amount))+\n  geom_bar()\n\n\n\n\n\n\n\n\nscoobydoo |&gt;\n  filter(imdb != \"NULL\") |&gt;\n  ggplot(aes(x=imdb, group=series_name, fill = series_name))+\n  geom_histogram(stat=\"count\", binwidth = 1)+\n  theme(legend.position = \"bottom\")\n\nWarning in geom_histogram(stat = \"count\", binwidth = 1): Ignoring unknown\nparameters: `binwidth`, `bins`, and `pad`\n\n\n\n\n\n\n\n\n\n# individual monsters of TV series\nscoobydoo_clean &lt;- scoobydoo |&gt;\n  filter(season %in% c(\"1\", \"2\",\"3\", \"4\"),\n         format == \"TV Series\") |&gt;\n  filter(monster_name != \"NULL\") |&gt;\n  mutate(monster_amount = ifelse(title == \"The Ghastly Ghost Town\", 5, monster_amount),\n         monster_amount = ifelse(title == \"Me and My Shadow Demon\", 3, monster_amount))|&gt;\n  mutate(monster_name = str_replace(monster_name, \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent,8,Agent,9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\", \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent 8,Agent 9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\")) |&gt;\n  select(title, season, series_name, contains(\"monster\")) |&gt;\n  pivot_longer(cols = c(monster_name, monster_gender, monster_type, monster_subtype, monster_species), names_to = \"monster_var\", values_to = \"monster\") |&gt;\n  separate(monster, c(\"1monster\", \"2monster\", \"3monster\", \"4monster\", \"5monster\", \"6monster\", \"7monster\", \"8monster\", \"9monster\", \"10monster\", \"11monster\", \"12monster\", \"13monster\", \"14monster\", \"15monster\"), sep = \",\") |&gt;\n  pivot_longer(cols = ends_with(\"monster\"), names_to = \"monster_num\", values_to = \"monster_value\") |&gt;\n  pivot_wider(names_from = monster_var, values_from = monster_value) |&gt;\n  separate(monster_num, c(\"monster_num\", \"x\"), sep = \"m\") |&gt;\n  mutate(monster_num = as.numeric(monster_num)) |&gt;\n  select(-x) |&gt;\n  filter(!is.na(monster_name)) |&gt;\n   mutate(monster_type = ifelse(monster_type == \"Disugised\", \"Disguised\", monster_type),\n          monster_type = ifelse(monster_type == \"Disguise\", \"Disguised\", monster_type)) |&gt;\n  mutate(monster_type = str_trim(monster_type, side = \"left\"))\n\nWarning: Expected 15 pieces. Additional pieces discarded in 2 rows [960, 962].\n\n\nWarning: Expected 15 pieces. Missing pieces filled with `NA` in 1809 rows [1, 2, 3, 4,\n5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n\n# what are the most common monster types, names from TV episodes?\nscoobydoo_clean |&gt;\n  group_by(monster_type) |&gt;\n  mutate(n= n()) |&gt;\n  filter(n &gt; 5) |&gt;\n  mutate(monster_type = fct_reorder(monster_type, n)) |&gt;\n  ggplot(aes(y = series_name, fill = monster_type))+\n  geom_bar(position = \"fill\")+\n  labs(title = \"Most Common Monster Types by series\")+\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n# are monsters real or not?\nggplot(scoobydoo_clean, aes(x=monster_real, fill = monster_type))+\n  geom_bar(color = \"white\", position = \"fill\")+\n  labs(title = \"Monster Type by Real/Not Real Status\")\n\n\n\n\n\n\n\n\n# monster genders\nscoobydoo_clean |&gt;\n  filter(!is.na(monster_gender)) |&gt;\n  group_by(monster_gender) |&gt;\n  mutate(n = n()) |&gt;\n  ggplot(aes(y = series_name, fill = monster_gender)) +\n  geom_bar(position = \"fill\")+\n  labs(x = \"Percent\",\n       title = \"% of Monsters by Gender per Series\")\n\n\n\n\n\n\n# monster genders over time\nscoobydoo_clean |&gt;\n  left_join(scoobydoo) |&gt;\n  select(monster_gender, title, season, series_name, date_aired) |&gt;\n  mutate(year = as.character(year(date_aired))) |&gt;\n  group_by(year, monster_gender) |&gt;\n  summarize(n = n()) |&gt;\n  na.omit() |&gt;\n  ggplot(aes(y = year, x = n, fill = monster_gender))+\n  geom_col(position = \"fill\")+\n  labs(title = \"Monster Gender Percentages by Year\")\n\nJoining with `by = join_by(title, season, series_name, monster_real,\nmonster_amount, monster_name, monster_gender, monster_type, monster_subtype,\nmonster_species)`\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n# monster gender by seasons\nscoobydoo_clean |&gt;\n  count(monster_gender, series_name, season) |&gt;\n  ggplot(aes(x = season, y = n, fill = monster_gender))+\n  geom_col(position = \"fill\")+\n  facet_wrap(~series_name)+\n  labs(title = \"Monster Gender Breakdown by Season of Series\")\n\n\n\n\n\n\n\n\np1 &lt;- scoobydoo_clean |&gt;\n  filter(monster_gender == \"Male\") |&gt;\n  count(monster_name) |&gt;\n  filter(n &gt; 3) |&gt;\n  mutate(monster_name = fct_reorder(monster_name, n)) |&gt;\n  ggplot(aes(y = monster_name, x = n))+\n  geom_col()+\n  labs(title = \"Monster Names by Gender in Scooby-Doo TV Episodes\",\n       subtitle = \"Male Monsters (n &gt;3)\",\n         x = \"Number of Occurences\", y = \"Monster Name\")+\n  theme(plot.title=element_text(face=\"bold\", size=15))\n\np2 &lt;- scoobydoo_clean |&gt;\n  filter(monster_gender == \"Female\") |&gt;\n  count(monster_name) |&gt;\n  mutate(monster_name = (fct_reorder(monster_name, n))) |&gt;\n  ggplot(aes(y= monster_name, x = n))+\n  geom_col()+\n  labs(subtitle = \"Female Monsters\",\n       x= \"Number of Occurences\", y = \"\")\n\np1 | p2\n\n\n\n\n\n\n\n\nscoobydoo_clean |&gt;\n  filter(monster_name == \"Dr. Phineus Phibes\") |&gt;\n  ggplot(aes(y=series_name))+\n  geom_bar()\n\n\n\n\n\n\nscoobydoo_clean |&gt;\n  filter(series_name == \"Shaggy & Scooby-Doo Get a Clue!\") |&gt;\n  count(monster_name) |&gt;\n  mutate(monster_name = fct_reorder(monster_name, n)) |&gt;\n  ggplot(aes(y=monster_name, x = n))+\n  geom_col()\n\n\n\n\n\n\n\n\nscoobydoo_clean |&gt;\n  filter(monster_type == \"Ghost\") |&gt;\n  select(monster_name, monster_gender) |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(n = n())\n\n# A tibble: 2 × 2\n  monster_gender     n\n  &lt;chr&gt;          &lt;int&gt;\n1 Female            10\n2 Male             149\n\nscoobydoo_clean |&gt;\n  filter(monster_gender == \"Male\") |&gt;\n  count(monster_name) |&gt;\n  arrange(desc(n))\n\n# A tibble: 425 × 2\n   monster_name           n\n   &lt;chr&gt;              &lt;int&gt;\n 1 Dr. Phineus Phibes    26\n 2 Agent 2               22\n 3 Dr. Trebla            20\n 4 Agent 1               19\n 5 Agent 4               12\n 6 Mark                  12\n 7 Ricky                 12\n 8 Agent 13              10\n 9 Zombies               10\n10 Agent 3                9\n# ℹ 415 more rows\n\np1&lt;- scoobydoo_clean |&gt; \n  filter(monster_type == \"Magician\") |&gt;\n  ggplot(aes(y=monster_subtype, fill = monster_gender))+\n  geom_bar()+\n  labs(title = \"Subtypes of Magician Monsters, by Gender\",\n       x = \"Count\", y = \"Monster Subtype\")\n\np2 &lt;- scoobydoo_clean |&gt;\n  filter(monster_subtype %in% c(\"Witch\", \"Wizard\")) |&gt;\n  ggplot(aes(x=monster_subtype, fill = monster_gender))+\n  geom_bar()+\n  labs(title = \"Witch and Wizard Monsters by Gender\",\n       x = \"Monster Subtype\", y = \"Count\")+\n  facet_wrap(~monster_type)\n\np1 / p2\n\n\n\n\n\n\n\n\nscoobydoo_clean |&gt;\n  ggplot(aes(y=monster_type, fill = monster_gender))+\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\n\n# do female monsters appear alone or with groups of monsters?\nscoobydoo_clean |&gt;\n  filter(monster_gender %in% c(\"Male\", \"Female\")) |&gt;\n  mutate(monster_amount = ifelse(monster_amount &gt;=10, \"10+\",\n                                 as.character(monster_amount))) |&gt;\n  mutate(monster_amount = fct_relevel(monster_amount, c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\",\n                                                        \"7\",\"8\",\"9\",\"10+\"))) |&gt;\n  ggplot(aes(x=monster_gender, fill = monster_amount))+\n  geom_bar(position = \"fill\", color = \"white\") +\n  labs(title = \"Monster Amount by Gender (%)\")\n\n\n\n\n\n\n# when there are 2 monsters, is it 2 female or 1 male and 1 female?\nscoobydoo_clean |&gt;  \n  filter(monster_amount == 2) |&gt;  \n  select(title, monster_num, monster_gender) |&gt;  \n  group_by(title, monster_num) |&gt;  \n  summarize(monster_gender = first(monster_gender)) |&gt;  \n  pivot_wider(names_from = monster_num, values_from = monster_gender) |&gt;\n  mutate(genders = paste(`1`,`2`, sep = \"_\")) |&gt;\n  mutate(genders = str_replace(genders, \"Female_Male\",\"Male_Female\")) |&gt;\n  ggplot(aes(x=genders))+\n  geom_bar()\n\n`summarise()` has grouped output by 'title'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n# runtime\n\nscoobydoo_clean |&gt;\n  left_join(scoobydoo |&gt; select(title, run_time)) |&gt;\n  filter(!is.na(monster_gender)) |&gt;\n  filter(monster_gender %in% c(\"Male\", \"Female\")) |&gt;\n  group_by(series_name) |&gt;\n  summarize(mean(run_time))\n\nJoining with `by = join_by(title)`\n\n\nWarning in left_join(scoobydoo_clean, select(scoobydoo, title, run_time)): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 273 of `x` matches multiple rows in `y`.\nℹ Row 11 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n# A tibble: 13 × 2\n   series_name                               `mean(run_time)`\n   &lt;chr&gt;                                                &lt;dbl&gt;\n 1 A Pup Named Scooby-Doo                                22.9\n 2 Be Cool, Scooby-Doo!                                  21.7\n 3 Scooby Doo, Where Are You!                            21.1\n 4 Scooby-Doo Mystery Incorporated                       22.4\n 5 Scooby-Doo and Guess Who?                             22.4\n 6 Scooby-Doo and Scrappy-Doo (first series)             21  \n 7 Shaggy & Scooby-Doo Get a Clue!                       22.7\n 8 The 13 Ghosts of Scooby-Doo                           24  \n 9 The New Scooby and Scrappy Doo Show                   23  \n10 The New Scooby-Doo Movies                             42.6\n11 The New Scooby-Doo Mysteries                          23  \n12 The Scooby-Doo Show                                   23.6\n13 What's New Scooby-Doo?                                21.0\n\n\n\nscoobydoo |&gt;\n  group_by(series_name) |&gt;\n  summarize(n = n()) |&gt;\n  arrange((desc(n)))\n\n# A tibble: 29 × 2\n   series_name                                    n\n   &lt;chr&gt;                                      &lt;int&gt;\n 1 Scooby-Doo and Scrappy-Doo (second series)    86\n 2 Be Cool, Scooby-Doo!                          53\n 3 Scooby-Doo Mystery Incorporated               52\n 4 Laff-a-Lympics                                48\n 5 Warner Home Video                             42\n 6 What's New Scooby-Doo?                        42\n 7 Scooby-Doo and Guess Who?                     41\n 8 The Scooby-Doo Show                           40\n 9 A Pup Named Scooby-Doo                        30\n10 Shaggy & Scooby-Doo Get a Clue!               26\n# ℹ 19 more rows\n\nscoobydoo |&gt;\n  group_by(season) |&gt;\n  summarize(n = n()) \n\n# A tibble: 7 × 2\n  season        n\n  &lt;chr&gt;     &lt;int&gt;\n1 1           311\n2 2           164\n3 3            60\n4 4             5\n5 Crossover     8\n6 Movie        42\n7 Special      13\n\nscoobydoo |&gt;\n  group_by(format) |&gt;\n  summarize(n = n())\n\n# A tibble: 5 × 2\n  format                    n\n  &lt;chr&gt;                 &lt;int&gt;\n1 Crossover                 8\n2 Movie                    43\n3 Movie (Theatrical)        3\n4 TV Series               374\n5 TV Series (segmented)   175\n\n# so we should probably focus on tv episodes and not movies?\n\n\n# filter to be just seasons\nscoobydoo_tv &lt;- scoobydoo |&gt;\n  filter(season %in% c(\"1\", \"2\", \"3\", \"4\"))\n\nscoobydoo_tv |&gt;\n  group_by(season) |&gt;\n  summarize(n = n())\n\n# A tibble: 4 × 2\n  season     n\n  &lt;chr&gt;  &lt;int&gt;\n1 1        311\n2 2        164\n3 3         60\n4 4          5\n\n# i'm not well-versed enough on scoobydoo...why does season 4 only have 5 episodes?\n\nscoobydoo_tv |&gt;\n  filter(season == \"4\")\n\n# A tibble: 5 × 75\n  index series_name    network season title imdb  engagement date_aired run_time\n  &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;      &lt;date&gt;        &lt;dbl&gt;\n1   329 A Pup Named S… ABC     4      The … 7.2   40         1991-08-03       23\n2   330 A Pup Named S… ABC     4      Catc… 6.6   37         1991-08-10        4\n3   331 A Pup Named S… ABC     4      The … 6.6   37         1991-08-10       11\n4   332 A Pup Named S… ABC     4      The … 6.6   37         1991-08-10        8\n5   333 A Pup Named S… ABC     4      Mayh… 7.2   32         1991-08-17       23\n# ℹ 66 more variables: format &lt;chr&gt;, monster_name &lt;chr&gt;, monster_gender &lt;chr&gt;,\n#   monster_type &lt;chr&gt;, monster_subtype &lt;chr&gt;, monster_species &lt;chr&gt;,\n#   monster_real &lt;chr&gt;, monster_amount &lt;dbl&gt;, caught_fred &lt;chr&gt;,\n#   caught_daphnie &lt;chr&gt;, caught_velma &lt;chr&gt;, caught_shaggy &lt;chr&gt;,\n#   caught_scooby &lt;chr&gt;, captured_fred &lt;chr&gt;, captured_daphnie &lt;chr&gt;,\n#   captured_velma &lt;chr&gt;, captured_shaggy &lt;chr&gt;, captured_scooby &lt;chr&gt;,\n#   unmask_fred &lt;chr&gt;, unmask_daphnie &lt;chr&gt;, unmask_velma &lt;chr&gt;, …\n\n\n\nggplot(scoobydoo_tv, aes(x=run_time))+\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\nscoobydoo_tv |&gt;\n  filter(series_name == \"A Pup Named Scooby-Doo\") |&gt;\n  summarize(sum = sum(run_time))\n\n# A tibble: 1 × 1\n    sum\n  &lt;dbl&gt;\n1   620\n\n\n\nscoobydoo_tv |&gt;\n  group_by(series_name, season) |&gt;  \n  summarize(length = sum(run_time), .groups = \"drop\") |&gt;  \n  group_by(series_name) |&gt;  \n  mutate(total_length = sum(length)) |&gt;  \n  ungroup() |&gt;  \n  mutate(series_name = fct_reorder(series_name, total_length)) |&gt; \n  mutate(season = factor(season, levels=sort(unique(season), decreasing = TRUE))) |&gt;\n  ggplot(aes(x = series_name, y = length, fill = season)) +\n  geom_col(color = \"white\", linewidth = 0.25) +\n  coord_flip() +\n  geom_text(aes(label = length), position = position_stack(vjust = 0.5), \n            size = 2.75, color = \"black\") +\n  geom_label(aes(label = total_length, y =1250), size = 3, fill = \"white\")+\n  labs(title = \"Scooby-Doo Series Runtime by Season\",\n       subtitle = \"Total Series Runtime at the Right\",\n       x = \"Series Name\",\n       y = \"Total Runtime\",\n       fill = \"Season\")\n\n\n\n\n\n\n\n\n# snacks!\n\nscooby_snacks &lt;- scoobydoo_tv |&gt;\n  select(index, series_name, title, season, contains(\"snack\"))\n\nscooby_snacks |&gt;\n  select(contains(\"snack\")) |&gt;\n  mutate(velma_snacks = str_count(snack_velma, \"TRUE\"),\n         fred_snacks = str_count(snack_fred, \"TRUE\"),\n         daphnie_snacks = str_count(snack_daphnie, \"TRUE\"),\n         shaggy_snacks = str_count(snack_shaggy, \"TRUE\"),\n         scooby_snacks = str_count(snack_scooby, \"TRUE\")) |&gt;\n  summarize(total_velma = sum(velma_snacks),\n            total_fred = sum(fred_snacks),\n            total_daphnie = sum(daphnie_snacks),\n            total_shaggy = sum(shaggy_snacks),\n            total_scooby = sum(scooby_snacks)) |&gt;\n  pivot_longer(cols = 1:5, names_to = \"char\", values_to = \"n_snacks\") |&gt;\n  ggplot(aes(x=char, y = n_snacks))+\n  geom_col()\n\n\n\n\n\n\nscooby_snacks |&gt;\n  mutate(number_of_snacks = str_sub(number_of_snacks, start = 0, end = 1)) |&gt;\n  filter(number_of_snacks != \"a\",\n         number_of_snacks != \"l\",\n         number_of_snacks != \"N\", \n         number_of_snacks != \"s\",\n         number_of_snacks != \"t\") |&gt;\n  group_by(series_name) |&gt;\n  mutate(total_snacks = sum(as.numeric(number_of_snacks))) |&gt; # fix these numbers\n  mutate(n_episodes = n()) |&gt;\n  ggplot(aes(x=total_snacks, y =series_name))+\n  geom_col()+\n  geom_label(aes(label = n_episodes, x = 10))+\n  labs(title = \"Number of Snacks Eaten in each series\",\n       subtitle = \"number of episodes displayed at the right\")\n\n\n\n\n\n\n\n\n# wrangle the culprit vars\nscoobydoo_culprit &lt;- scoobydoo |&gt;\n  filter(season %in% c(\"1\", \"2\",\"3\", \"4\"),\n         format == \"TV Series\") |&gt;\n  filter(culprit_name != \"NULL\") |&gt;\n  select(title, season, series_name, motive, contains(\"culprit\")) |&gt;\n  pivot_longer(cols = c(culprit_name, culprit_gender), names_to = \"culprit_var\",\n               values_to = \"culprit\") |&gt;\n  separate(culprit, c(\"1culprit\", \"2culprit\", \"3culprit\", \"4culprit\", \"5culprit\",\n                      \"6culprit\", \"7culprit\", \"8culprit\", \"9culprit\", \"10culprit\",\n                      \"11culprit\"), sep = \",\") |&gt;\n  pivot_longer(cols = ends_with(\"culprit\"), names_to = \"culprit_num\", values_to = \"culprit_value\") |&gt;\n  pivot_wider(names_from = culprit_var, values_from = culprit_value) |&gt;\n  separate(culprit_num, c(\"culprit_num\", \"x\"), sep = \"c\") |&gt;\n  select(-x) |&gt;\n  mutate(culprit_num = as.numeric(culprit_num)) |&gt;\n  na.omit() |&gt;\n  mutate(culprit_gender = str_trim(culprit_gender, side = \"left\"))\n\nWarning: Expected 11 pieces. Missing pieces filled with `NA` in 634 rows [1, 2, 3, 4, 5,\n6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n\n# examine motives\nscoobydoo_tv |&gt;\n  filter(motive != \"NULL\") |&gt;\n  group_by(motive) |&gt;\n  summarize(n = n()) |&gt;\n  mutate(motive = fct_reorder(motive, n)) |&gt;\n  ggplot(aes(y=motive, x = n))+\n  geom_col()\n\n\n\n\n\n\nscoobydoo_clean |&gt;\n  left_join(scoobydoo_tv) |&gt;\n  select(title, series_name, season, motive, monster_gender, \n         monster_name, culprit_gender, culprit_name) |&gt;\n  group_by(motive, monster_gender) |&gt;\n  summarize(n = n()) |&gt;\n  na.omit() |&gt;\n  filter(motive != \"NULL\") |&gt;\n  ggplot(aes(x = monster_gender, y = n, fill = motive))+\n  geom_col(color = \"white\", position = \"fill\")\n\nJoining with `by = join_by(title, season, series_name, monster_real,\nmonster_amount, monster_name, monster_gender, monster_type, monster_subtype,\nmonster_species)`\n`summarise()` has grouped output by 'motive'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\np1 &lt;- scoobydoo_culprit |&gt;\n  filter(culprit_gender == \"Female\") |&gt;\n  count(culprit_name) |&gt;\n  ggplot(aes(y = culprit_name, x = n))+\n  geom_col()+\n  labs(subtitle = \"Male Culprits\")\n\np2 &lt;- scoobydoo_culprit |&gt;\n  filter(culprit_gender == \"Male\") |&gt;\n  count(culprit_name) |&gt;\n  ggplot(aes(y = culprit_name, x = n))+\n  geom_col()+\n  labs(subtitle = \"Female Culprits\")\n\np1 | p2\n\n\n\n\n\n\n\n\nggplot(scoobydoo_culprit, aes(y=series_name, fill = culprit_gender)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\n\nscoobydoo_culprit |&gt;\n  count(culprit_gender) \n\n# A tibble: 2 × 2\n  culprit_gender     n\n  &lt;chr&gt;          &lt;int&gt;\n1 Female           101\n2 Male             332\n\n\n\n# gender of plants???\nscoobydoo_clean |&gt;\n  filter(monster_type == \"Plant\") |&gt;\n  select(monster_type, monster_name, monster_gender)\n\n# A tibble: 10 × 3\n   monster_type monster_name   monster_gender\n   &lt;chr&gt;        &lt;chr&gt;          &lt;chr&gt;         \n 1 Plant        Cactus         None          \n 2 Plant        Kelp Monster   Male          \n 3 Plant        Evil Tree      Male          \n 4 Plant        Evil Tree      Male          \n 5 Plant        Living Plants  Male          \n 6 Plant        Stinkweed      Male          \n 7 Plant        Coral Creature Male          \n 8 Plant        Swamp Monster  Male          \n 9 Plant        Plant Monster  Male          \n10 Plant        Gnarled One    Male          \n\n\n\nscoobydoo_clean |&gt;\n  ggplot(aes(x=monster_real, fill = monster_type))+\n  geom_bar()\n\n\n\n\n\n\nscoobydoo_clean |&gt;\n  filter(monster_real == \"TRUE\") |&gt;\n  count(monster_name) |&gt;\n  arrange(desc(n))\n\n# A tibble: 97 × 2\n   monster_name           n\n   &lt;chr&gt;              &lt;int&gt;\n 1 Dr. Phineus Phibes    26\n 2 Agent 2               22\n 3 Dr. Trebla            20\n 4 Agent 1               19\n 5 Agent 4               12\n 6 Mark                  12\n 7 Ricky                 12\n 8 Agent 13              10\n 9 Agent 11               9\n10 Agent 3                9\n# ℹ 87 more rows",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>SarahR</span>"
    ]
  },
  {
    "objectID": "src/eda/KupaM.html",
    "href": "src/eda/KupaM.html",
    "title": "\n9  KupaM\n",
    "section": "",
    "text": "# Load required libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidytuesdayR)\n\nWarning: package 'tidytuesdayR' was built under R version 4.4.3\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(ggthemes)\n\nWarning: package 'ggthemes' was built under R version 4.4.3\n\n# Load the Scooby-Doo dataset\ntuesdata &lt;- tidytuesdayR::tt_load(2021, week = 29)\n\n---- Compiling #TidyTuesday Information for 2021-07-13 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"scoobydoo.csv\"\n\nscooby &lt;- tuesdata$scoobydoo |&gt; clean_names()\n\n\nselected_series &lt;- c(\n  \"Scooby-Doo, Where Are You!\",\n  \"What's New, Scooby-Doo?\",\n  \"Scooby-Doo! Mystery Incorporated\",\n  \"Be Cool, Scooby-Doo!\",\n  \"The New Scooby-Doo Movies\",\n  \"The 13 Ghosts of Scooby-Doo\"\n)\n\nscooby %&gt;%\n  filter(!is.na(culprit_gender), culprit_gender != \"NULL\") %&gt;%\n  mutate(culprit_gender = str_to_title(culprit_gender)) %&gt;%\n  mutate(culprit_gender = case_when(\n    culprit_gender %in% c(\"Male\", \"Female\") ~ culprit_gender,\n    TRUE ~ \"Other\"\n  )) %&gt;%\n  filter(series_name %in% selected_series) %&gt;%\n  group_by(series_name, culprit_gender) %&gt;%\n  summarize(episodes = n(), .groups = \"drop\") %&gt;%\n  ggplot(aes(x = culprit_gender, y = episodes, fill = culprit_gender)) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~ series_name, scales = \"free_y\", ncol = 1) +\n  labs(\n    title = \"Culprit Gender Across Six Scooby-Doo Series\",\n    x = \"Gender\",\n    y = \"Number of Episodes\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 18, hjust = 0.5),\n    strip.text = element_text(size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.text = element_text(size = 12),\n    axis.title = element_text(size = 13)\n  )\n\n\n\n\n\n\n\nAcross most series, male culprits dominate the episodes\n\nfemale_monsters &lt;- scooby %&gt;%\n  filter(!is.na(monster_gender), monster_gender == \"Female\") %&gt;%\n  group_by(season) %&gt;%\n  summarize(female_monsters_count = n(), .groups = \"drop\") %&gt;%\n  mutate(season = factor(season, levels = unique(season), ordered = TRUE)) %&gt;% # Convert to ordered factor\n  arrange(desc(season))\n\nggplot(female_monsters, aes(x = season, y = female_monsters_count)) +\n  geom_line(color = \"blue\", size = 1, group = 1) + # Added group = 1 for line plot\n  geom_point(color = \"red\") +\n  labs(\n    title = \"Female Monsters Across Scooby-Doo Seasons\",\n    x = \"Season\",\n    y = \"Number of Female Monsters\"\n  ) +\n  theme_minimal(base_size = 14)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\ncatchphrases &lt;- scooby %&gt;%\n  select(series_name, zoinks, jeepers, jinkies) %&gt;%\n  pivot_longer(cols = -series_name, names_to = \"phrase\", values_to = \"count\") %&gt;%\n  mutate(count = as.numeric(count)) %&gt;%\nfilter(!is.na(count), count &gt; 0)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `count = as.numeric(count)`.\nCaused by warning:\n! NAs introduced by coercion\n\ncatchphrases %&gt;%\n  group_by(series_name, phrase) %&gt;%\n  summarize(total = sum(count), .groups = \"drop\") %&gt;%\n  ggplot(aes(x = phrase, y = total, fill = phrase)) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~ series_name, scales = \"free_y\") +\n  labs(title = \"Catchphrase Frequency by Series\", x = \"Catchphrase\", y = \"Total Uses\") +\n  theme_bw()\n\n\n\n\n\n\n\nCatchphrase usage varies significantly by series, reflecting changes in writing styles or featured characters.\n\nscooby %&gt;%\n  filter(!is.na(monster_amount)) %&gt;%\n  arrange(desc(monster_amount)) %&gt;%\n  slice_max(monster_amount, n = 10) %&gt;%\n  select(title, series_name, season, monster_amount)\n\n# A tibble: 12 × 4\n   title                                  series_name      season monster_amount\n   &lt;chr&gt;                                  &lt;chr&gt;            &lt;chr&gt;           &lt;dbl&gt;\n 1 Scooby-Doo! and the Reluctant Werewolf Hanna-Barbera S… Speci…             19\n 2 Shags to Riches                        Shaggy & Scooby… 1                  15\n 3 More Fondue for Scooby-Doo             Shaggy & Scooby… 1                  13\n 4 Zoinksman                              Shaggy & Scooby… 2                  13\n 5 Runaway Robi                           Shaggy & Scooby… 2                  13\n 6 Super Scary Movie Night                Shaggy & Scooby… 2                  12\n 7 Uncle Albert Alert                     Shaggy & Scooby… 2                  12\n 8 One Minuite Mysteries!                 Scooby-Doo and … 1                  12\n 9 Scooby-Doo 2: Monsters Unleashed       Warner Bros. Pi… Movie              11\n10 Lightning Strikes Twice                Shaggy & Scooby… 1                  11\n11 Pole to Pole                           Shaggy & Scooby… 1                  11\n12 The Many Faces of Evil                 Shaggy & Scooby… 2                  11\n\n\nCertain episodes feature significantly more monsters, possibly due to special episodes or finales.",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>KupaM</span>"
    ]
  },
  {
    "objectID": "src/appx/proposal.html",
    "href": "src/appx/proposal.html",
    "title": "Appendix A — Proposal",
    "section": "",
    "text": "A.0.1 Title\n“Frequency of Common Phrases and Events across Scooby-Doo Episodes”\n\n\nA.0.2 Team Members\nAdele Fraser, Maria Benito Correa, Sarah Radzilowski\n\n\nA.0.3 Description\nWe will be exploring the Scooby-Doo dataset collected by Kaggle user plummye. We will focus our investigation on the common phrases used in Scooby-Doo episodes across time, as well as how these phrases relate to other events.\n\n\nA.0.4 Inspirations\nWe found a dataset on Scooby Doo episodes from the TidyTuesday datasets. Since there are so many variables tracked for each episode, including the number of times a phrase was said in an episode. We thought it would be interesting to analyze if there was a relationship between the number of times a phrase was said (ie “Zoinks” or “Jeepers”) and events of an episode (ie the type of monster or which character said phrases more often).\n\n\nA.0.5 Plan\n\nThink about the list of deliverables when building the plan.\nThe plan should be presented in a table format.\n\n\n\nWhat?\nWho?\nWhen?\n\n\n\n\nCreate Github Repository\nEveryone\n4/9\n\n\nGroup Project proposal\nEveryone\n4/9\n\n\nCase study\nEveryone\n4/9\n\n\nEffective Teamwork Reading\nEveryone (Independent)\n4/11\n\n\nMotivation\nSarah\n4/11\n\n\nCreate research questions\nEveryone\n4/11\n\n\nBackground\nMaria\n4/14\n\n\nUnderstand/explore the data (following the data questions on project description page)\nEveryone\n4/14\n\n\nWrangle Data for each Question\nAdele\n4/16\n\n\nMake visualizations to answer research questions and apply effective viz principles\nEveryone\n4/18\n\n\nConnect findings back to research questions\nAdele\n4/21\n\n\nLimitations and Future Work\nMaria\n4/21\n\n\nCreate README.md file (requirements on course site)\nEveryone\n4/24\n\n\nWrite report  (requirements on course site)\nEveryone\n4/24\n\n\nMake presentation slideshow\nEveryone\n4/28\n\n\nScript Outline for Presentation\nEveryone\n4/28\n\n\nUse Feedback from Presentation 1\nEveryone (Divided when received)\n5/9\n\n\nFinal Presentation Video\nEveryone\n5/9 (10:30 AM - 12:30 PM)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Proposal</span>"
    ]
  },
  {
    "objectID": "src/appx/case-study.html",
    "href": "src/appx/case-study.html",
    "title": "Appendix B — Case Study",
    "section": "",
    "text": "Report referenced: https://fivethirtyeight.com/features/six-charts-to-help-americans-understand-the-upcoming-german-election/\nObservations\n“Six Charts To Help Americans Understand The Upcoming German Election” by Anna Hazard starts by providing a short context of why the author created this report.\nThen, the report presents six research questions. The questions start off broad (What are Germans voting on? What are the parties and what do they stand for?) and increasingly become more specific (Who’s in these parties? What is Afd?). At the end of the report, the author proposes and answers some follow-up questions related to the upcoming election (What else should I look out for in this election?).\nEach question is answered by short paragraphs of text followed by a visualization. The report includes a variety of visualizations we have made in class before: maps and scatter plots, and some that we are less familiar with making: tables, charts with organized dots, and more. Most of the visualizations have a title, followed by a one sentence caption. The visualizations are full of color.\nThe report and visualizations also compare German political parties to American political parties. This helps put the numbers into context and better explains the German political party system for an American audience, like the title suggests.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Case Study</span>"
    ]
  }
]