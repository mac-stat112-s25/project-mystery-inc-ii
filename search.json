[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "project title",
    "section": "",
    "text": "Your report will go here.\n\n# this is a test code",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "src/eff-team/AdeleF.html",
    "href": "src/eff-team/AdeleF.html",
    "title": "2  Adele F",
    "section": "",
    "text": "Perfecting Teamwork: Building High-Performing Teams by Encouraging Learning\nBy: Think Fast Talk Smart: Communication Techniques\nLink to Podcast: https://open.spotify.com/episode/7pHpUwOMGOC2FXcikLvySt?si=9336eeaebb7d416f\nSummary:\nI listened to an episode of the Think Fast Talk Smart podcast with guest Sarah Singer, a doctor and medical communication coordinator. Her main requirements for a high-functioning and efficient team were that the group is team-oriented, learning-oriented, and system-oriented. There need to be clear roles in a team and if there is a hierarchy, it needs to be weak and relatively level so that everyone can learn from each other in their areas of expertise. In this vein, people also need to be willing to make mistakes in front of each other and learn from them, no matter their level of seniority in a team. These ideas about hierarchy were very valid in a medical context but apply less to our teamwork in class.\nSpecifically, what I can summarize from this podcast that will help me in class teamwork is communication nuances. One thing that helps a team work well according to the podcast is repeating back what a team member has said to make sure that it is enacted correctly and to help everyone feel heard. This is especially important when learning new techniques and sharing new ideas with each other. I also think that the idea of learning from our mistakes is something that we will be able to do very well and need to focus on in this project, rather than getting too frustrated and bogged down by feeling stuck.",
    "crumbs": [
      "Effective Teamwork",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Adele F</span>"
    ]
  },
  {
    "objectID": "src/eff-team/MariaB.html",
    "href": "src/eff-team/MariaB.html",
    "title": "3  MariaB",
    "section": "",
    "text": "##Steps to Building an Effective Team by U.C. Berkeley’s People & Culture Office\nEffective team leaders build relationships based off of trust and loyalty, not fear and power. Ways to establish trust and loyalty are to treat everyone’s ideas as valuable, not sugar-coating things, encourage quiet team members to contribute by reminding them that the team is a judgement free zone and safe space. To avoid acting from a place of power and fear, it is important to make decisions based off of consensus, establish team values and goals, and and being aware of epople’s unspoken feelings and body language.\nIt should be a goal to be direct as possible, bit also keeping in mind that while this is the goal, not everyone is comfortable with sharing their true thoughts/wants/needs, so sometimes making inferences based off of people’s body language and other signs is needed.",
    "crumbs": [
      "Effective Teamwork",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>MariaB</span>"
    ]
  },
  {
    "objectID": "src/eff-team/SarahR.html",
    "href": "src/eff-team/SarahR.html",
    "title": "4  SarahR",
    "section": "",
    "text": "4.1 Effective Teamwork Reading\nArticle read: https://employer.macildowie.com/blog/the-15-principles-of-building-high-performing-teams\nSummary\nI read an article by Macildowie, a recruitment and retention consultancy in the UK titled “The 15 Principles of Building High-Performing Teams.” The first section of the article highlighted the importance and benefits of team building. Some of these benefits included increased productivity, due to greater efficiency and output when working in teams, increased creativity, and stronger abilities to tackle complex challenges effectively when pooling multiple peoples’ skills together.\nMany of the 15 principles mentioned in the article were related to trust and communication. For example, principle 1, establishing trust, described trust as the “foundation to any successful team.” Trust can be related to having confidence in each others’ intentions, capabilities, and reliability, and also allows group members to feel safe taking risks without fear of criticism. Principle 3, Fostering Open Communication, is also important, since it allows members to share their thoughts, concerns and ideas. Good communication can relate to other principles mentioned, like celebrating success and supporting members, defining clear roles or responsibilities for group members, regularly sharing expertise, and holding members accountable for their actions or responsibilities.\nIn my opinion, to create a well-functioning team, building a strong foundation of trust, communication, and accountability is essential. Practicing all three of these principles in our team will encourage collaboration and cooperation within a team, and let us achieve greater success on our project work.",
    "crumbs": [
      "Effective Teamwork",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>SarahR</span>"
    ]
  },
  {
    "objectID": "src/eda/AdeleF.html",
    "href": "src/eda/AdeleF.html",
    "title": "\n5  Adele F\n",
    "section": "",
    "text": "# load data and packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidytuesdayR)\nlibrary(dplyr)\nlibrary(forcats)\nlibrary(DataExplorer)\n\ntuesdata &lt;- tidytuesdayR::tt_load(2021, week = 29)\n\n---- Compiling #TidyTuesday Information for 2021-07-13 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"scoobydoo.csv\"\n\nscoobydoo &lt;- tuesdata$scoobydoo\n\n\nhead(scoobydoo)\n\n# A tibble: 6 × 75\n  index series_name    network season title imdb  engagement date_aired run_time\n  &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;      &lt;date&gt;        &lt;dbl&gt;\n1     1 Scooby Doo, W… CBS     1      What… 8.1   556        1969-09-13       21\n2     2 Scooby Doo, W… CBS     1      A Cl… 8.1   479        1969-09-20       22\n3     3 Scooby Doo, W… CBS     1      Hass… 8     455        1969-09-27       21\n4     4 Scooby Doo, W… CBS     1      Mine… 7.8   426        1969-10-04       21\n5     5 Scooby Doo, W… CBS     1      Deco… 7.5   391        1969-10-11       21\n6     6 Scooby Doo, W… CBS     1      What… 8.4   384        1969-10-18       21\n# ℹ 66 more variables: format &lt;chr&gt;, monster_name &lt;chr&gt;, monster_gender &lt;chr&gt;,\n#   monster_type &lt;chr&gt;, monster_subtype &lt;chr&gt;, monster_species &lt;chr&gt;,\n#   monster_real &lt;chr&gt;, monster_amount &lt;dbl&gt;, caught_fred &lt;chr&gt;,\n#   caught_daphnie &lt;chr&gt;, caught_velma &lt;chr&gt;, caught_shaggy &lt;chr&gt;,\n#   caught_scooby &lt;chr&gt;, captured_fred &lt;chr&gt;, captured_daphnie &lt;chr&gt;,\n#   captured_velma &lt;chr&gt;, captured_shaggy &lt;chr&gt;, captured_scooby &lt;chr&gt;,\n#   unmask_fred &lt;chr&gt;, unmask_daphnie &lt;chr&gt;, unmask_velma &lt;chr&gt;, …\n\ndim(scoobydoo)\n\n[1] 603  75\n\nscoobydoo |&gt;\n  group_by(monster_amount) |&gt;\n  summarize(number_of_episodes = n())\n\n# A tibble: 16 × 2\n   monster_amount number_of_episodes\n            &lt;dbl&gt;              &lt;int&gt;\n 1              0                 87\n 2              1                350\n 3              2                 66\n 4              3                 32\n 5              4                 24\n 6              5                  7\n 7              6                  5\n 8              7                  7\n 9              8                  6\n10              9                  4\n11             10                  3\n12             11                  4\n13             12                  3\n14             13                  3\n15             15                  1\n16             19                  1\n\n#Looking deeper into the episodes and observations that have no monsters\nscoobydoo |&gt;\n  filter(monster_amount == 0) |&gt;\n  group_by(series_name, season) |&gt;\n  summarize(count = n()) |&gt;\n  arrange(desc(count))\n\n`summarise()` has grouped output by 'series_name'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 13 × 3\n# Groups:   series_name [9]\n   series_name                                season  count\n   &lt;chr&gt;                                      &lt;chr&gt;   &lt;int&gt;\n 1 Laff-a-Lympics                             1          28\n 2 Scooby-Doo and Scrappy-Doo (second series) 1          16\n 3 Scooby-Doo and Scrappy-Doo (second series) 3          16\n 4 Laff-a-Lympics                             2          12\n 5 Scooby-Doo and Scrappy-Doo (second series) 2           4\n 6 A Pup Named Scooby-Doo                     4           2\n 7 The New Scooby and Scrappy Doo Show        1           2\n 8 The New Scooby-Doo Mysteries               1           2\n 9 A Pup Named Scooby-Doo                     2           1\n10 Scooby Goes Hollywood                      Movie       1\n11 Scooby-Doo and Scrappy-Doo (first series)  1           1\n12 TV Special                                 Special     1\n13 Warner Home Video                          Movie       1\n\nscoobydoo |&gt;\n  filter(monster_amount == 19)\n\n# A tibble: 1 × 75\n  index series_name    network season title imdb  engagement date_aired run_time\n  &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;      &lt;date&gt;        &lt;dbl&gt;\n1   313 Hanna-Barbera… Syndic… Speci… Scoo… 6.9   3924       1988-11-13       91\n# ℹ 66 more variables: format &lt;chr&gt;, monster_name &lt;chr&gt;, monster_gender &lt;chr&gt;,\n#   monster_type &lt;chr&gt;, monster_subtype &lt;chr&gt;, monster_species &lt;chr&gt;,\n#   monster_real &lt;chr&gt;, monster_amount &lt;dbl&gt;, caught_fred &lt;chr&gt;,\n#   caught_daphnie &lt;chr&gt;, caught_velma &lt;chr&gt;, caught_shaggy &lt;chr&gt;,\n#   caught_scooby &lt;chr&gt;, captured_fred &lt;chr&gt;, captured_daphnie &lt;chr&gt;,\n#   captured_velma &lt;chr&gt;, captured_shaggy &lt;chr&gt;, captured_scooby &lt;chr&gt;,\n#   unmask_fred &lt;chr&gt;, unmask_daphnie &lt;chr&gt;, unmask_velma &lt;chr&gt;, …\n\n\n\ncat_a &lt;- c(\"Female\")\ncat_b &lt;- c(\"Male\")\n\nscoobydoo |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(number = n()) |&gt;\n  filter(monster_gender != \"NULL\") |&gt;\n  mutate(binary_gender = case_when(\n    monster_gender %in% cat_a ~ \"Female\",\n    monster_gender %in% cat_b ~ \"Male\",\n    TRUE ~ \"&gt;1\")) |&gt;\n  group_by(binary_gender) |&gt;\n  summarize(total = sum(number))\n\n# A tibble: 3 × 2\n  binary_gender total\n  &lt;chr&gt;         &lt;int&gt;\n1 &gt;1              167\n2 Female           30\n3 Male            319\n\nscoobydoo |&gt;\n  group_by(culprit_gender) |&gt;\n  summarize(number = n()) |&gt;\n  filter(culprit_gender != \"NULL\") |&gt;\n  mutate(binary_gender = case_when(\n    culprit_gender %in% cat_a ~ \"Female\",\n    culprit_gender %in% cat_b ~ \"Male\",\n    TRUE ~ \"&gt;1\")) |&gt;\n  group_by(binary_gender) |&gt;\n  summarize(total = sum(number))\n\n# A tibble: 3 × 2\n  binary_gender total\n  &lt;chr&gt;         &lt;int&gt;\n1 &gt;1              116\n2 Female           61\n3 Male            263\n\n\nFrom the above table, I learned that 30 episodes have 1 female monster, 319 episodes have 1 male monster, and 167 episodes have more than one monster. Doing the same type of analysis for the number of culprits, I learn tnat there are 116 episodes with more than one culprit, 61 with female culprits, and 263 with male culprits.\n\nscoobydoo |&gt;\n  introduce()\n\n# A tibble: 1 × 9\n   rows columns discrete_columns continuous_columns all_missing_columns\n  &lt;int&gt;   &lt;int&gt;            &lt;int&gt;              &lt;int&gt;               &lt;int&gt;\n1   603      75               70                  5                   0\n# ℹ 4 more variables: total_missing_values &lt;int&gt;, complete_rows &lt;int&gt;,\n#   total_observations &lt;int&gt;, memory_usage &lt;dbl&gt;\n\nplot_intro(scoobydoo)\n\n\n\n\n\n\nplot_bar(scoobydoo)\n\n11 columns ignored with more than 50 categories.\ntitle: 602 categories\nengagement: 234 categories\ndate_aired: 448 categories\nmonster_name: 482 categories\nmonster_type: 133 categories\nmonster_subtype: 270 categories\nmonster_species: 195 categories\nsetting_country_state: 79 categories\nculprit_name: 434 categories\nif_it_wasnt_for: 108 categories\nand_that: 65 categories\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nscoobydoo |&gt;\n  filter(jeepers &gt;= 1, jeepers != \"NULL\") |&gt;\n  select(index, jeepers) |&gt;\n  arrange(desc(jeepers))\n\n# A tibble: 117 × 2\n   index jeepers\n   &lt;dbl&gt; &lt;chr&gt;  \n 1   390 9      \n 2    81 7      \n 3    87 7      \n 4   121 7      \n 5   130 7      \n 6   115 6      \n 7   127 6      \n 8    61 5      \n 9    58 4      \n10   109 4      \n# ℹ 107 more rows\n\nscoobydoo |&gt;\n  filter(zoinks &gt;= 1, zoinks != \"NULL\") |&gt;\n  select(index, zoinks) |&gt;\n  arrange(desc(zoinks)) |&gt;\n  group_by(zoinks) |&gt;\n  summarize(n()) |&gt;\n  arrange(desc(zoinks))\n\n# A tibble: 16 × 2\n   zoinks `n()`\n   &lt;chr&gt;  &lt;int&gt;\n 1 9          7\n 2 8         11\n 3 7          9\n 4 6          6\n 5 5         17\n 6 4         32\n 7 3         65\n 8 26         1\n 9 2        109\n10 16         1\n11 14         2\n12 13         2\n13 12         2\n14 11         1\n15 10         8\n16 1        142\n\n\nContinuing some gender specific analyses using the data wrangling that Sarah did:\n\n# individual monsters of TV series\nscoobydoo_clean &lt;- scoobydoo |&gt;\n  filter(season %in% c(\"1\", \"2\",\"3\", \"4\"),\n         format == \"TV Series\") |&gt;\n  filter(monster_name != \"NULL\") |&gt;\n  mutate(monster_name = str_replace(monster_name, \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent,8,Agent,9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\", \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent 8,Agent 9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\")) |&gt;\n  select(title, season, series_name, contains(\"monster\")) |&gt;\n  pivot_longer(cols = c(monster_name, monster_gender, monster_type, monster_subtype, monster_species), names_to = \"monster_var\", values_to = \"monster\") |&gt;\n  separate(monster, c(\"1monster\", \"2monster\", \"3monster\", \"4monster\", \"5monster\", \"6monster\", \"7monster\", \"8monster\", \"9monster\", \"10monster\", \"11monster\", \"12monster\", \"13monster\", \"14monster\", \"15monster\"), sep = \",\") |&gt;\n  pivot_longer(cols = ends_with(\"monster\"), names_to = \"monster_num\", values_to = \"monster_value\") |&gt;\n  pivot_wider(names_from = monster_var, values_from = monster_value) |&gt;\n  mutate(monster_num = as.numeric(str_sub(monster_num, 1, 1))) |&gt;\n  na.omit()\n\nWarning: Expected 15 pieces. Additional pieces discarded in 2 rows [960, 962].\n\n\nWarning: Expected 15 pieces. Missing pieces filled with `NA` in 1809 rows [1, 2, 3, 4,\n5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\nscoobydoo_clean |&gt;\n  filter(monster_species != \"Human\") |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(number = n()) |&gt;\n  ggplot(aes(x = monster_gender, y = number)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Non-Human Monster Genders\")\n\n\n\n\n\n\nscoobydoo_clean |&gt;\n  filter(monster_species == \"Human\") |&gt;\n  group_by(monster_gender) |&gt;\n  summarize(number = n()) |&gt;\n  ggplot(aes(x = monster_gender, y = number)) +\n  geom_bar(stat = \"identity\")\n\n\n\n\n\n\n# scoobydoo_clean |&gt;\n#   mutate(human_ = ifelse(monster_species == \"Human\"){\"Human\"}, ifelse{\"Not_Human\"}) |&gt;\n#   group_by(monster_gender) |&gt;\n#   summarize(number = n()) |&gt;\n#   ggplot(aes(x = monster_gender, y = number)) +\n#   geom_bar(stat = \"identity\")\n\nBetween human and non-human monsters, the gender ratio seems relatively similar.\n\n#This section will explore the relationship between certain phrases and the gender ratio of monsters",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Adele F</span>"
    ]
  },
  {
    "objectID": "src/eda/MariaB.html",
    "href": "src/eda/MariaB.html",
    "title": "\n6  MariaB\n",
    "section": "",
    "text": "##EDA #Guiding question 1: Does the presence of Batman in an episode influence (either) if a trap was used, or the amount of monsters present? #Guiding question 2: Does a certain type of monster trigger some phrases more than others?\n#load packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(DataExplorer) #new package from Michael Clark blog post as shown in slides\n\n#load data\n\ntuesdata &lt;- tidytuesdayR::tt_load(2021, week = 29)\n\n---- Compiling #TidyTuesday Information for 2021-07-13 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"scoobydoo.csv\"\n\nscoobydoo &lt;- tuesdata$scoobydoo\n\n\nhead(scoobydoo)\n\n# A tibble: 6 × 75\n  index series_name    network season title imdb  engagement date_aired run_time\n  &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;      &lt;date&gt;        &lt;dbl&gt;\n1     1 Scooby Doo, W… CBS     1      What… 8.1   556        1969-09-13       21\n2     2 Scooby Doo, W… CBS     1      A Cl… 8.1   479        1969-09-20       22\n3     3 Scooby Doo, W… CBS     1      Hass… 8     455        1969-09-27       21\n4     4 Scooby Doo, W… CBS     1      Mine… 7.8   426        1969-10-04       21\n5     5 Scooby Doo, W… CBS     1      Deco… 7.5   391        1969-10-11       21\n6     6 Scooby Doo, W… CBS     1      What… 8.4   384        1969-10-18       21\n# ℹ 66 more variables: format &lt;chr&gt;, monster_name &lt;chr&gt;, monster_gender &lt;chr&gt;,\n#   monster_type &lt;chr&gt;, monster_subtype &lt;chr&gt;, monster_species &lt;chr&gt;,\n#   monster_real &lt;chr&gt;, monster_amount &lt;dbl&gt;, caught_fred &lt;chr&gt;,\n#   caught_daphnie &lt;chr&gt;, caught_velma &lt;chr&gt;, caught_shaggy &lt;chr&gt;,\n#   caught_scooby &lt;chr&gt;, captured_fred &lt;chr&gt;, captured_daphnie &lt;chr&gt;,\n#   captured_velma &lt;chr&gt;, captured_shaggy &lt;chr&gt;, captured_scooby &lt;chr&gt;,\n#   unmask_fred &lt;chr&gt;, unmask_daphnie &lt;chr&gt;, unmask_velma &lt;chr&gt;, …\n\n\n\nstr(scoobydoo)\n\nspc_tbl_ [603 × 75] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ index                   : num [1:603] 1 2 3 4 5 6 7 8 9 10 ...\n $ series_name             : chr [1:603] \"Scooby Doo, Where Are You!\" \"Scooby Doo, Where Are You!\" \"Scooby Doo, Where Are You!\" \"Scooby Doo, Where Are You!\" ...\n $ network                 : chr [1:603] \"CBS\" \"CBS\" \"CBS\" \"CBS\" ...\n $ season                  : chr [1:603] \"1\" \"1\" \"1\" \"1\" ...\n $ title                   : chr [1:603] \"What a Night for a Knight\" \"A Clue for Scooby Doo\" \"Hassle in the Castle\" \"Mine Your Own Business\" ...\n $ imdb                    : chr [1:603] \"8.1\" \"8.1\" \"8\" \"7.8\" ...\n $ engagement              : chr [1:603] \"556\" \"479\" \"455\" \"426\" ...\n $ date_aired              : Date[1:603], format: \"1969-09-13\" \"1969-09-20\" ...\n $ run_time                : num [1:603] 21 22 21 21 21 21 21 21 21 21 ...\n $ format                  : chr [1:603] \"TV Series\" \"TV Series\" \"TV Series\" \"TV Series\" ...\n $ monster_name            : chr [1:603] \"Black Knight\" \"Ghost of Cptn. Cuttler\" \"Phantom\" \"Miner 49'er\" ...\n $ monster_gender          : chr [1:603] \"Male\" \"Male\" \"Male\" \"Male\" ...\n $ monster_type            : chr [1:603] \"Possessed Object\" \"Ghost\" \"Ghost\" \"Ancient\" ...\n $ monster_subtype         : chr [1:603] \"Suit\" \"Suit\" \"Phantom\" \"Miner\" ...\n $ monster_species         : chr [1:603] \"Object\" \"Human\" \"Human\" \"Human\" ...\n $ monster_real            : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ monster_amount          : num [1:603] 1 1 1 1 1 1 1 1 1 1 ...\n $ caught_fred             : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"TRUE\" ...\n $ caught_daphnie          : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ caught_velma            : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ caught_shaggy           : chr [1:603] \"TRUE\" \"TRUE\" \"FALSE\" \"FALSE\" ...\n $ caught_scooby           : chr [1:603] \"TRUE\" \"FALSE\" \"TRUE\" \"FALSE\" ...\n $ captured_fred           : chr [1:603] \"FALSE\" \"TRUE\" \"FALSE\" \"FALSE\" ...\n $ captured_daphnie        : chr [1:603] \"FALSE\" \"TRUE\" \"FALSE\" \"FALSE\" ...\n $ captured_velma          : chr [1:603] \"FALSE\" \"TRUE\" \"FALSE\" \"FALSE\" ...\n $ captured_shaggy         : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ captured_scooby         : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ unmask_fred             : chr [1:603] \"FALSE\" \"TRUE\" \"TRUE\" \"TRUE\" ...\n $ unmask_daphnie          : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ unmask_velma            : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ unmask_shaggy           : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ unmask_scooby           : chr [1:603] \"TRUE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ snack_fred              : chr [1:603] \"TRUE\" \"FALSE\" \"TRUE\" \"FALSE\" ...\n $ snack_daphnie           : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"TRUE\" ...\n $ snack_velma             : chr [1:603] \"FALSE\" \"TRUE\" \"FALSE\" \"FALSE\" ...\n $ snack_shaggy            : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ snack_scooby            : chr [1:603] \"FALSE\" \"FALSE\" \"FALSE\" \"FALSE\" ...\n $ unmask_other            : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ caught_other            : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ caught_not              : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ trap_work_first         : chr [1:603] \"NULL\" \"FALSE\" \"FALSE\" \"TRUE\" ...\n $ setting_terrain         : chr [1:603] \"Urban\" \"Coast\" \"Island\" \"Cave\" ...\n $ setting_country_state   : chr [1:603] \"United States\" \"United States\" \"United States\" \"California\" ...\n $ suspects_amount         : num [1:603] 2 2 0 2 1 2 1 2 1 1 ...\n $ non_suspect             : chr [1:603] \"FALSE\" \"TRUE\" \"TRUE\" \"FALSE\" ...\n $ arrested                : chr [1:603] \"TRUE\" \"TRUE\" \"TRUE\" \"TRUE\" ...\n $ culprit_name            : chr [1:603] \"Mr. Wickles\" \"Cptn. Cuttler\" \"Bluestone the Great\" \"Hank\" ...\n $ culprit_gender          : chr [1:603] \"Male\" \"Male\" \"Male\" \"Male\" ...\n $ culprit_amount          : num [1:603] 1 1 1 1 1 1 1 1 1 1 ...\n $ motive                  : chr [1:603] \"Theft\" \"Theft\" \"Treasure\" \"Natural Resource\" ...\n $ if_it_wasnt_for         : chr [1:603] \"NULL\" \"NULL\" \"NULL\" \"NULL\" ...\n $ and_that                : chr [1:603] \"NULL\" \"NULL\" \"NULL\" \"NULL\" ...\n $ door_gag                : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ number_of_snacks        : chr [1:603] \"2\" \"1\" \"3\" \"2\" ...\n $ split_up                : chr [1:603] \"1\" \"0\" \"0\" \"1\" ...\n $ another_mystery         : chr [1:603] \"1\" \"0\" \"0\" \"0\" ...\n $ set_a_trap              : chr [1:603] \"0\" \"0\" \"0\" \"0\" ...\n $ jeepers                 : chr [1:603] \"0\" \"0\" \"0\" \"0\" ...\n $ jinkies                 : chr [1:603] \"0\" \"0\" \"0\" \"0\" ...\n $ my_glasses              : chr [1:603] \"1\" \"0\" \"0\" \"0\" ...\n $ just_about_wrapped_up   : chr [1:603] \"0\" \"0\" \"0\" \"0\" ...\n $ zoinks                  : chr [1:603] \"1\" \"3\" \"1\" \"2\" ...\n $ groovy                  : chr [1:603] \"0\" \"0\" \"2\" \"1\" ...\n $ scooby_doo_where_are_you: chr [1:603] \"0\" \"1\" \"0\" \"0\" ...\n $ rooby_rooby_roo         : chr [1:603] \"1\" \"0\" \"0\" \"0\" ...\n $ batman                  : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ scooby_dum              : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ scrappy_doo             : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ hex_girls               : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ blue_falcon             : logi [1:603] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ fred_va                 : chr [1:603] \"Frank Welker\" \"Frank Welker\" \"Frank Welker\" \"Frank Welker\" ...\n $ daphnie_va              : chr [1:603] \"Stefanianna Christopherson\" \"Stefanianna Christopherson\" \"Stefanianna Christopherson\" \"Stefanianna Christopherson\" ...\n $ velma_va                : chr [1:603] \"Nicole Jaffe\" \"Nicole Jaffe\" \"Nicole Jaffe\" \"Nicole Jaffe\" ...\n $ shaggy_va               : chr [1:603] \"Casey Kasem\" \"Casey Kasem\" \"Casey Kasem\" \"Casey Kasem\" ...\n $ scooby_va               : chr [1:603] \"Don Messick\" \"Don Messick\" \"Don Messick\" \"Don Messick\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   index = col_double(),\n  ..   series_name = col_character(),\n  ..   network = col_character(),\n  ..   season = col_character(),\n  ..   title = col_character(),\n  ..   imdb = col_character(),\n  ..   engagement = col_character(),\n  ..   date_aired = col_date(format = \"\"),\n  ..   run_time = col_double(),\n  ..   format = col_character(),\n  ..   monster_name = col_character(),\n  ..   monster_gender = col_character(),\n  ..   monster_type = col_character(),\n  ..   monster_subtype = col_character(),\n  ..   monster_species = col_character(),\n  ..   monster_real = col_character(),\n  ..   monster_amount = col_double(),\n  ..   caught_fred = col_character(),\n  ..   caught_daphnie = col_character(),\n  ..   caught_velma = col_character(),\n  ..   caught_shaggy = col_character(),\n  ..   caught_scooby = col_character(),\n  ..   captured_fred = col_character(),\n  ..   captured_daphnie = col_character(),\n  ..   captured_velma = col_character(),\n  ..   captured_shaggy = col_character(),\n  ..   captured_scooby = col_character(),\n  ..   unmask_fred = col_character(),\n  ..   unmask_daphnie = col_character(),\n  ..   unmask_velma = col_character(),\n  ..   unmask_shaggy = col_character(),\n  ..   unmask_scooby = col_character(),\n  ..   snack_fred = col_character(),\n  ..   snack_daphnie = col_character(),\n  ..   snack_velma = col_character(),\n  ..   snack_shaggy = col_character(),\n  ..   snack_scooby = col_character(),\n  ..   unmask_other = col_logical(),\n  ..   caught_other = col_logical(),\n  ..   caught_not = col_logical(),\n  ..   trap_work_first = col_character(),\n  ..   setting_terrain = col_character(),\n  ..   setting_country_state = col_character(),\n  ..   suspects_amount = col_double(),\n  ..   non_suspect = col_character(),\n  ..   arrested = col_character(),\n  ..   culprit_name = col_character(),\n  ..   culprit_gender = col_character(),\n  ..   culprit_amount = col_double(),\n  ..   motive = col_character(),\n  ..   if_it_wasnt_for = col_character(),\n  ..   and_that = col_character(),\n  ..   door_gag = col_logical(),\n  ..   number_of_snacks = col_character(),\n  ..   split_up = col_character(),\n  ..   another_mystery = col_character(),\n  ..   set_a_trap = col_character(),\n  ..   jeepers = col_character(),\n  ..   jinkies = col_character(),\n  ..   my_glasses = col_character(),\n  ..   just_about_wrapped_up = col_character(),\n  ..   zoinks = col_character(),\n  ..   groovy = col_character(),\n  ..   scooby_doo_where_are_you = col_character(),\n  ..   rooby_rooby_roo = col_character(),\n  ..   batman = col_logical(),\n  ..   scooby_dum = col_logical(),\n  ..   scrappy_doo = col_logical(),\n  ..   hex_girls = col_logical(),\n  ..   blue_falcon = col_logical(),\n  ..   fred_va = col_character(),\n  ..   daphnie_va = col_character(),\n  ..   velma_va = col_character(),\n  ..   shaggy_va = col_character(),\n  ..   scooby_va = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n#Report using data explorer package\n\ncreate_report(scoobydoo)\n\n\n\nprocessing file: report.rmd\n\n\n\n  |                                           \n  |                                     |   0%\n  |                                           \n  |.                                    |   2%                                 \n  |                                           \n  |..                                   |   5% [global_options]                \n  |                                           \n  |...                                  |   7%                                 \n  |                                           \n  |....                                 |  10% [introduce]                     \n  |                                           \n  |....                                 |  12%                                 \n  |                                           \n  |.....                                |  14% [plot_intro]                    \n  |                                           \n  |......                               |  17%                                 \n  |                                           \n  |.......                              |  19% [data_structure]                \n  |                                           \n  |........                             |  21%                                 \n  |                                           \n  |.........                            |  24% [missing_profile]               \n  |                                           \n  |..........                           |  26%                                 \n  |                                           \n  |...........                          |  29% [univariate_distribution_header]\n  |                                           \n  |...........                          |  31%                                 \n  |                                           \n  |............                         |  33% [plot_histogram]                \n  |                                           \n  |.............                        |  36%                                 \n  |                                           \n  |..............                       |  38% [plot_density]                  \n  |                                           \n  |...............                      |  40%                                 \n  |                                           \n  |................                     |  43% [plot_frequency_bar]            \n  |                                           \n  |.................                    |  45%                                 \n  |                                           \n  |..................                   |  48% [plot_response_bar]             \n  |                                           \n  |..................                   |  50%                                 \n  |                                           \n  |...................                  |  52% [plot_with_bar]                 \n  |                                           \n  |....................                 |  55%                                 \n  |                                           \n  |.....................                |  57% [plot_normal_qq]                \n  |                                           \n  |......................               |  60%                                 \n  |                                           \n  |.......................              |  62% [plot_response_qq]              \n  |                                           \n  |........................             |  64%                                 \n  |                                           \n  |.........................            |  67% [plot_by_qq]                    \n  |                                           \n  |..........................           |  69%                                 \n  |                                           \n  |..........................           |  71% [correlation_analysis]          \n  |                                           \n  |...........................          |  74%                                 \n  |                                           \n  |............................         |  76% [principal_component_analysis]  \n  |                                           \n  |.............................        |  79%                                 \n  |                                           \n  |..............................       |  81% [bivariate_distribution_header] \n  |                                           \n  |...............................      |  83%                                 \n  |                                           \n  |................................     |  86% [plot_response_boxplot]         \n  |                                           \n  |.................................    |  88%                                 \n  |                                           \n  |.................................    |  90% [plot_by_boxplot]               \n  |                                           \n  |..................................   |  93%                                 \n  |                                           \n  |...................................  |  95% [plot_response_scatterplot]     \n  |                                           \n  |.................................... |  98%                                 \n  |                                           \n  |.....................................| 100% [plot_by_scatterplot]           \n                                                                                                                           \n\n\noutput file: C:/Users/frase/OneDrive/Documents/GitHub/project-mystery-inc-ii/src/eda/report.knit.md\n\n\n\"C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/pandoc\" +RTS -K512m -RTS \"C:\\Users\\frase\\OneDrive\\Documents\\GitHub\\project-mystery-inc-ii\\src\\eda\\report.knit.md\" --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output pandoc4ce8111e346f.html --lua-filter \"C:\\Users\\frase\\AppData\\Local\\R\\win-library\\4.4\\rmarkdown\\rmarkdown\\lua\\pagebreak.lua\" --lua-filter \"C:\\Users\\frase\\AppData\\Local\\R\\win-library\\4.4\\rmarkdown\\rmarkdown\\lua\\latex-div.lua\" --embed-resources --standalone --variable bs3=TRUE --section-divs --table-of-contents --toc-depth 6 --template \"C:\\Users\\frase\\AppData\\Local\\R\\win-library\\4.4\\rmarkdown\\rmd\\h\\default.html\" --no-highlight --variable highlightjs=1 --variable theme=yeti --mathjax --variable \"mathjax-url=https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" --include-in-header \"C:\\Users\\frase\\AppData\\Local\\Temp\\RtmpOQ79Nr\\rmarkdown-str4ce8723a3e11.html\" \n\n\n\nOutput created: report.html\n\n\n#phrases that are said multiple times (more than 2) in an episode: ‘zoinks’, ‘jinkies’ #phrases said mostly once or twice: ‘sooby doo where are you’, ‘rooby rooby roo’, ‘my glasses’, ‘just about wrapped up’ #133 monster categories\n##For guiding question 1: Does the presence of Batman in an episode influence (either) if a trap was used, or the amount of monsters present?\n\n# Convert to factor if needed\n#data$batman_present &lt;- as.factor(data$batman_present)\nscoobydoo$set_a_trap &lt;- as.factor(scoobydoo$set_a_trap)\n\n# Check proportions\ntable(scoobydoo$batman, scoobydoo$set_a_trap)\n\n       \n          0   1   2 NULL\n  FALSE 335  44   1  219\n  TRUE    3   1   0    0\n\nprop.table(table(scoobydoo$batman, scoobydoo$set_a_trap), 1)\n\n       \n                  0           1           2        NULL\n  FALSE 0.559265442 0.073455760 0.001669449 0.365609349\n  TRUE  0.750000000 0.250000000 0.000000000 0.000000000\n\n\n#On average, there are more monsters present when batman is in an episode. But, there are many large outliers when batman is not present in an episode.\n\nggplot(scoobydoo, aes(x = batman, y = monster_amount)) +\n  geom_boxplot() \n\n\n\n\n\n\n\n##For guiding question 2: Does a certain type of monster trigger some phrases more than others?\n#how often are the phrases said?\n\nscoobydoo %&gt;%\n  count(zoinks)\n\n# A tibble: 18 × 2\n   zoinks     n\n   &lt;chr&gt;  &lt;int&gt;\n 1 0        156\n 2 1        142\n 3 10         8\n 4 11         1\n 5 12         2\n 6 13         2\n 7 14         2\n 8 16         1\n 9 2        109\n10 26         1\n11 3         65\n12 4         32\n13 5         17\n14 6          6\n15 7          9\n16 8         11\n17 9          7\n18 NULL      32\n\n#26 times in one episode\n\nscoobydoo %&gt;%\n  count(groovy)\n\n# A tibble: 5 × 2\n  groovy     n\n  &lt;chr&gt;  &lt;int&gt;\n1 0        553\n2 1         14\n3 14         1\n4 2          3\n5 NULL      32\n\n#14 times in one episode\n\nscoobydoo %&gt;%\n  count(jeepers)\n\n# A tibble: 11 × 2\n   jeepers     n\n   &lt;chr&gt;   &lt;int&gt;\n 1 0         321\n 2 1          62\n 3 10          1\n 4 2          26\n 5 3          11\n 6 4           9\n 7 5           1\n 8 6           2\n 9 7           4\n10 9           1\n11 NULL      165\n\n#10 times in one episode\n\nscoobydoo %&gt;%\n  count(rooby_rooby_roo)\n\n# A tibble: 9 × 2\n  rooby_rooby_roo     n\n  &lt;chr&gt;           &lt;int&gt;\n1 0                 231\n2 1                 306\n3 2                  20\n4 3                  11\n5 4                   4\n6 5                   1\n7 6                   1\n8 7                   1\n9 NULL               28\n\n#7 times in one epsiode\n\n\nscoobydoo %&gt;%\n  count(scooby_doo_where_are_you)\n\n# A tibble: 6 × 2\n  scooby_doo_where_are_you     n\n  &lt;chr&gt;                    &lt;int&gt;\n1 0                          509\n2 1                           51\n3 2                            9\n4 3                            1\n5 4                            1\n6 NULL                        32\n\n#4 times in one episdoe\n\n#What type of monsters are there and how often do they come up in the data?\n\nscoobydoo |&gt; \n  count(monster_type)\n\n# A tibble: 133 × 2\n   monster_type                                                                n\n   &lt;chr&gt;                                                                   &lt;int&gt;\n 1 Ancient                                                                    18\n 2 Ancient,Ancient                                                             1\n 3 Ancient,Animal                                                              2\n 4 Ancient,Ghost,Extraterrestrial,Animal,Disguised,Ghost,Possessed Object…     1\n 5 Ancient,Possessed                                                           1\n 6 Ancient,Possessed Object                                                    1\n 7 Animal                                                                     71\n 8 Animal,Ancient                                                              1\n 9 Animal,Ancient,Ancient,Mechanical,Plant                                     1\n10 Animal,Animal                                                               8\n# ℹ 123 more rows\n\n\n\nscoobydoo %&gt;%\n  count(monster_type, sort = TRUE) %&gt;%\n  ggplot(aes(x = reorder(monster_type, -n), y = n, fill = monster_type)) +\n  geom_col(show.legend = FALSE) +\n  labs(title = \"Count of Monster Types\", x = \"Monster Type\", y = \"Count\")\n\n\n\n\n\n\n\n##NEW EDA with wrangled data (monsters separated) AND new question #First wrangle data with code from Sarah\n\n# individual monsters of TV series\nscoobydoo_clean &lt;- scoobydoo |&gt;\n  filter(season %in% c(\"1\", \"2\",\"3\", \"4\"),\n         format == \"TV Series\") |&gt;\n  filter(monster_name != \"NULL\") |&gt;\n  mutate(monster_name = str_replace(monster_name, \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent,8,Agent,9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\", \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent 8,Agent 9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\")) |&gt;\n  select(title, season, series_name, contains(\"monster\")) |&gt;\n  pivot_longer(cols = c(monster_name, monster_gender, monster_type, monster_subtype, monster_species), names_to = \"monster_var\", values_to = \"monster\") |&gt;\n  separate(monster, c(\"1monster\", \"2monster\", \"3monster\", \"4monster\", \"5monster\", \"6monster\", \"7monster\", \"8monster\", \"9monster\", \"10monster\", \"11monster\", \"12monster\", \"13monster\", \"14monster\", \"15monster\"), sep = \",\") |&gt;\n  pivot_longer(cols = ends_with(\"monster\"), names_to = \"monster_num\", values_to = \"monster_value\") |&gt;\n  pivot_wider(names_from = monster_var, values_from = monster_value) |&gt;\n  mutate(monster_num = as.numeric(str_sub(monster_num, 1, 1))) |&gt;\n  na.omit()\n\nWarning: Expected 15 pieces. Additional pieces discarded in 2 rows [960, 962].\n\n\nWarning: Expected 15 pieces. Missing pieces filled with `NA` in 1809 rows [1, 2, 3, 4,\n5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n#New question: #Does the gender of a character influence their likelihood of being portrayed as a monster or criminal, and are there specific phrases that consistently appear in episodes featuring female vs. male villains?\n#Gender of monsters\n\nggplot(scoobydoo_clean, aes(y = monster_type, fill = monster_gender,)) + \n  geom_bar(position = \"fill\")",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>MariaB</span>"
    ]
  },
  {
    "objectID": "src/eda/SarahR.html",
    "href": "src/eda/SarahR.html",
    "title": "\n7  SarahR\n",
    "section": "",
    "text": "# load data and packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidytuesdayR)\n\ntuesdata &lt;- tidytuesdayR::tt_load(2021, week = 29)\n\n---- Compiling #TidyTuesday Information for 2021-07-13 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"scoobydoo.csv\"\n\nscoobydoo &lt;- tuesdata$scoobydoo\n\n\nsummary(scoobydoo)\n\n     index       series_name          network             season         \n Min.   :  1.0   Length:603         Length:603         Length:603        \n 1st Qu.:151.5   Class :character   Class :character   Class :character  \n Median :302.0   Mode  :character   Mode  :character   Mode  :character  \n Mean   :302.0                                                           \n 3rd Qu.:452.5                                                           \n Max.   :603.0                                                           \n    title               imdb            engagement          date_aired        \n Length:603         Length:603         Length:603         Min.   :1969-09-13  \n Class :character   Class :character   Class :character   1st Qu.:1979-12-04  \n Mode  :character   Mode  :character   Mode  :character   Median :1988-09-10  \n                                                          Mean   :1994-09-18  \n                                                          3rd Qu.:2011-12-09  \n                                                          Max.   :2021-02-25  \n    run_time        format          monster_name       monster_gender    \n Min.   : 4.00   Length:603         Length:603         Length:603        \n 1st Qu.:12.00   Class :character   Class :character   Class :character  \n Median :22.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :23.52                                                           \n 3rd Qu.:23.00                                                           \n Max.   :94.00                                                           \n monster_type       monster_subtype    monster_species    monster_real      \n Length:603         Length:603         Length:603         Length:603        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n monster_amount  caught_fred        caught_daphnie     caught_velma      \n Min.   : 0.00   Length:603         Length:603         Length:603        \n 1st Qu.: 1.00   Class :character   Class :character   Class :character  \n Median : 1.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   : 1.75                                                           \n 3rd Qu.: 2.00                                                           \n Max.   :19.00                                                           \n caught_shaggy      caught_scooby      captured_fred      captured_daphnie  \n Length:603         Length:603         Length:603         Length:603        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n captured_velma     captured_shaggy    captured_scooby    unmask_fred       \n Length:603         Length:603         Length:603         Length:603        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n unmask_daphnie     unmask_velma       unmask_shaggy      unmask_scooby     \n Length:603         Length:603         Length:603         Length:603        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  snack_fred        snack_daphnie      snack_velma        snack_shaggy      \n Length:603         Length:603         Length:603         Length:603        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n snack_scooby       unmask_other    caught_other    caught_not     \n Length:603         Mode :logical   Mode :logical   Mode :logical  \n Class :character   FALSE:568       FALSE:519       FALSE:572      \n Mode  :character   TRUE :35        TRUE :84        TRUE :31       \n                                                                   \n                                                                   \n                                                                   \n trap_work_first    setting_terrain    setting_country_state suspects_amount \n Length:603         Length:603         Length:603            Min.   : 0.000  \n Class :character   Class :character   Class :character      1st Qu.: 1.000  \n Mode  :character   Mode  :character   Mode  :character      Median : 3.000  \n                                                             Mean   : 2.851  \n                                                             3rd Qu.: 4.000  \n                                                             Max.   :20.000  \n non_suspect          arrested         culprit_name       culprit_gender    \n Length:603         Length:603         Length:603         Length:603        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n culprit_amount     motive          if_it_wasnt_for      and_that        \n Min.   : 0.00   Length:603         Length:603         Length:603        \n 1st Qu.: 0.00   Class :character   Class :character   Class :character  \n Median : 1.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   : 1.04                                                           \n 3rd Qu.: 1.00                                                           \n Max.   :11.00                                                           \n  door_gag       number_of_snacks     split_up         another_mystery   \n Mode :logical   Length:603         Length:603         Length:603        \n FALSE:544       Class :character   Class :character   Class :character  \n TRUE :59        Mode  :character   Mode  :character   Mode  :character  \n                                                                         \n                                                                         \n                                                                         \n  set_a_trap          jeepers            jinkies           my_glasses       \n Length:603         Length:603         Length:603         Length:603        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n just_about_wrapped_up    zoinks             groovy         \n Length:603            Length:603         Length:603        \n Class :character      Class :character   Class :character  \n Mode  :character      Mode  :character   Mode  :character  \n                                                            \n                                                            \n                                                            \n scooby_doo_where_are_you rooby_rooby_roo      batman        scooby_dum     \n Length:603               Length:603         Mode :logical   Mode :logical  \n Class :character         Class :character   FALSE:599       FALSE:586      \n Mode  :character         Mode  :character   TRUE :4         TRUE :17       \n                                                                            \n                                                                            \n                                                                            \n scrappy_doo     hex_girls       blue_falcon       fred_va         \n Mode :logical   Mode :logical   Mode :logical   Length:603        \n FALSE:438       FALSE:597       FALSE:570       Class :character  \n TRUE :165       TRUE :6         TRUE :33        Mode  :character  \n                                                                   \n                                                                   \n                                                                   \n  daphnie_va          velma_va          shaggy_va          scooby_va        \n Length:603         Length:603         Length:603         Length:603        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n\n\n\nscoobydoo |&gt;\n  filter(monster_amount &gt; 16) |&gt;\n  select(title, contains(\"monster\"))\n\n# A tibble: 1 × 8\n  title monster_name monster_gender monster_type monster_subtype monster_species\n  &lt;chr&gt; &lt;chr&gt;        &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;           &lt;chr&gt;          \n1 Scoo… Count Dracu… Male,Male,Mal… Undead,Anim… Vampire,Humano… Human,Wolf,Hum…\n# ℹ 2 more variables: monster_real &lt;chr&gt;, monster_amount &lt;dbl&gt;\n\nggplot(scoobydoo, aes(x=monster_amount))+\n  geom_bar()\n\n\n\n\n\n\n\n\nscoobydoo |&gt;\n  filter(imdb != \"NULL\") |&gt;\n  ggplot(aes(x=imdb, group=series_name, fill = series_name))+\n  geom_histogram(stat=\"count\", binwidth = 1)+\n  theme(legend.position = \"bottom\")\n\nWarning in geom_histogram(stat = \"count\", binwidth = 1): Ignoring unknown\nparameters: `binwidth`, `bins`, and `pad`\n\n\n\n\n\n\n\n\n\n# individual monsters of TV series\nscoobydoo2 &lt;- scoobydoo |&gt;\n  filter(season %in% c(\"1\", \"2\",\"3\", \"4\"),\n         format == \"TV Series\") |&gt;\n  filter(monster_name != \"NULL\") |&gt;\n  mutate(monster_name = str_replace(monster_name, \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent,8,Agent,9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\", \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent 8,Agent 9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\")) |&gt;\n  select(title, season, series_name, contains(\"monster\")) |&gt;\n  pivot_longer(cols = c(monster_name, monster_gender, monster_type, monster_subtype, monster_species), names_to = \"monster_var\", values_to = \"monster\") |&gt;\n  separate(monster, c(\"monster1\", \"monster2\", \"monster3\", \"monster4\", \"monster5\", \"monster6\", \"monster7\", \"monster8\", \"monster9\", \"monster10\", \"monster11\", \"monster12\", \"monster13\", \"monster14\", \"monster15\", \"monster16\"), sep = \",\") |&gt;\n  pivot_wider(names_from = monster_var, values_from = monster1:monster16) \n\nWarning: Expected 16 pieces. Missing pieces filled with `NA` in 1813 rows [1, 2, 3, 4,\n5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n\n# what are the most common monster types, names from TV episodes?\n# figure out how to get this for all monsters (not just monster1)\nscoobydoo2 |&gt;\n  count(monster1_monster_name) |&gt;\n  filter(n &gt; 1) |&gt;\n  mutate(monster1_monster_name = fct_reorder(monster1_monster_name, n)) |&gt;\n  ggplot(aes(y=monster1_monster_name, x = n))+\n  geom_col()+\n  labs(title = \"Most Common Monster Names\")\n\n\n\n\n\n\nscoobydoo2 |&gt;\n  count(monster1_monster_type) |&gt;\n  filter(n &gt; 1) |&gt;\n  mutate(monster1_monster_type = fct_reorder(monster1_monster_type, n)) |&gt;\n  ggplot(aes(y=monster1_monster_type, x = n))+\n  geom_col()+\n  labs(title = \"Most Common Monster Types\")\n\n\n\n\n\n\n# are monsters real or not?\nggplot(scoobydoo2, aes(x=monster_real, fill = monster1_monster_type))+\n  geom_bar(color = \"white\")\n\n\n\n\n\n\n\n\nscoobydoo |&gt;\n  group_by(series_name) |&gt;\n  summarize(n = n()) |&gt;\n  arrange((desc(n)))\n\n# A tibble: 29 × 2\n   series_name                                    n\n   &lt;chr&gt;                                      &lt;int&gt;\n 1 Scooby-Doo and Scrappy-Doo (second series)    86\n 2 Be Cool, Scooby-Doo!                          53\n 3 Scooby-Doo Mystery Incorporated               52\n 4 Laff-a-Lympics                                48\n 5 Warner Home Video                             42\n 6 What's New Scooby-Doo?                        42\n 7 Scooby-Doo and Guess Who?                     41\n 8 The Scooby-Doo Show                           40\n 9 A Pup Named Scooby-Doo                        30\n10 Shaggy & Scooby-Doo Get a Clue!               26\n# ℹ 19 more rows\n\nscoobydoo |&gt;\n  group_by(season) |&gt;\n  summarize(n = n()) \n\n# A tibble: 7 × 2\n  season        n\n  &lt;chr&gt;     &lt;int&gt;\n1 1           311\n2 2           164\n3 3            60\n4 4             5\n5 Crossover     8\n6 Movie        42\n7 Special      13\n\nscoobydoo |&gt;\n  group_by(format) |&gt;\n  summarize(n = n())\n\n# A tibble: 5 × 2\n  format                    n\n  &lt;chr&gt;                 &lt;int&gt;\n1 Crossover                 8\n2 Movie                    43\n3 Movie (Theatrical)        3\n4 TV Series               374\n5 TV Series (segmented)   175\n\n# so we should probably focus on tv episodes and not movies?\n\n\n# filter to be just seasons\nscoobydoo_tv &lt;- scoobydoo |&gt;\n  filter(season %in% c(\"1\", \"2\", \"3\", \"4\"))\n\nscoobydoo_tv |&gt;\n  group_by(season) |&gt;\n  summarize(n = n())\n\n# A tibble: 4 × 2\n  season     n\n  &lt;chr&gt;  &lt;int&gt;\n1 1        311\n2 2        164\n3 3         60\n4 4          5\n\n# i'm not well-versed enough on scoobydoo...why does season 4 only have 5 episodes?\n\nscoobydoo_tv |&gt;\n  filter(season == \"4\")\n\n# A tibble: 5 × 75\n  index series_name    network season title imdb  engagement date_aired run_time\n  &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;      &lt;date&gt;        &lt;dbl&gt;\n1   329 A Pup Named S… ABC     4      The … 7.2   40         1991-08-03       23\n2   330 A Pup Named S… ABC     4      Catc… 6.6   37         1991-08-10        4\n3   331 A Pup Named S… ABC     4      The … 6.6   37         1991-08-10       11\n4   332 A Pup Named S… ABC     4      The … 6.6   37         1991-08-10        8\n5   333 A Pup Named S… ABC     4      Mayh… 7.2   32         1991-08-17       23\n# ℹ 66 more variables: format &lt;chr&gt;, monster_name &lt;chr&gt;, monster_gender &lt;chr&gt;,\n#   monster_type &lt;chr&gt;, monster_subtype &lt;chr&gt;, monster_species &lt;chr&gt;,\n#   monster_real &lt;chr&gt;, monster_amount &lt;dbl&gt;, caught_fred &lt;chr&gt;,\n#   caught_daphnie &lt;chr&gt;, caught_velma &lt;chr&gt;, caught_shaggy &lt;chr&gt;,\n#   caught_scooby &lt;chr&gt;, captured_fred &lt;chr&gt;, captured_daphnie &lt;chr&gt;,\n#   captured_velma &lt;chr&gt;, captured_shaggy &lt;chr&gt;, captured_scooby &lt;chr&gt;,\n#   unmask_fred &lt;chr&gt;, unmask_daphnie &lt;chr&gt;, unmask_velma &lt;chr&gt;, …\n\n\n\nggplot(scoobydoo_tv, aes(x=run_time))+\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\nscoobydoo_tv |&gt;\n  filter(series_name == \"A Pup Named Scooby-Doo\") |&gt;\n  summarize(sum = sum(run_time))\n\n# A tibble: 1 × 1\n    sum\n  &lt;dbl&gt;\n1   620\n\n\n\nscoobydoo_tv |&gt;\n  group_by(series_name, season) |&gt;  \n  summarize(length = sum(run_time), .groups = \"drop\") |&gt;  \n  group_by(series_name) |&gt;  \n  mutate(total_length = sum(length)) |&gt;  \n  ungroup() |&gt;  \n  mutate(series_name = fct_reorder(series_name, total_length)) |&gt; \n  mutate(season = factor(season, levels=sort(unique(season), decreasing = TRUE))) |&gt;\n  ggplot(aes(x = series_name, y = length, fill = season)) +\n  geom_col(color = \"white\", linewidth = 0.25) +\n  coord_flip() +\n  geom_text(aes(label = length), position = position_stack(vjust = 0.5), \n            size = 2.75, color = \"black\") +\n  geom_label(aes(label = total_length, y =1250), size = 3, fill = \"white\")+\n  labs(title = \"Scooby-Doo Series Runtime by Season\",\n       subtitle = \"Total Series Runtime at the Right\",\n       x = \"Series Name\",\n       y = \"Total Runtime\",\n       fill = \"Season\")\n\n\n\n\n\n\n\n\n# snacks!\n\nscooby_snacks &lt;- scoobydoo_tv |&gt;\n  select(index, series_name, title, season, contains(\"snack\"))\n\nscooby_snacks |&gt;\n  select(contains(\"snack\")) |&gt;\n  mutate(velma_snacks = str_count(snack_velma, \"TRUE\"),\n         fred_snacks = str_count(snack_fred, \"TRUE\"),\n         daphnie_snacks = str_count(snack_daphnie, \"TRUE\"),\n         shaggy_snacks = str_count(snack_shaggy, \"TRUE\"),\n         scooby_snacks = str_count(snack_scooby, \"TRUE\")) |&gt;\n  summarize(total_velma = sum(velma_snacks),\n            total_fred = sum(fred_snacks),\n            total_daphnie = sum(daphnie_snacks),\n            total_shaggy = sum(shaggy_snacks),\n            total_scooby = sum(scooby_snacks)) |&gt;\n  pivot_longer(cols = 1:5, names_to = \"char\", values_to = \"n_snacks\") |&gt;\n  ggplot(aes(x=char, y = n_snacks))+\n  geom_col()\n\n\n\n\n\n\nscooby_snacks |&gt;\n  mutate(number_of_snacks = str_sub(number_of_snacks, start = 0, end = 1)) |&gt;\n  filter(number_of_snacks != \"a\",\n         number_of_snacks != \"l\",\n         number_of_snacks != \"N\", \n         number_of_snacks != \"s\",\n         number_of_snacks != \"t\") |&gt;\n  group_by(series_name) |&gt;\n  mutate(total_snacks = sum(as.numeric(number_of_snacks))) |&gt; # fix these numbers\n  mutate(n_episodes = n()) |&gt;\n  ggplot(aes(x=total_snacks, y =series_name))+\n  geom_col()+\n  geom_label(aes(label = n_episodes, x = 10))+\n  labs(title = \"Number of Snacks Eateneaten in each series\",\n       subtitle = \"number of episodes displayed at the right\")",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>SarahR</span>"
    ]
  },
  {
    "objectID": "src/eda/KupakwasheM.html",
    "href": "src/eda/KupakwasheM.html",
    "title": "\n8  Kupa\n",
    "section": "",
    "text": "# load data and packages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidytuesdayR)\nlibrary(dplyr)\nlibrary(forcats)\nlibrary(DataExplorer)\n\ntuesdata &lt;- tidytuesdayR::tt_load(2021, week = 29)\n\n---- Compiling #TidyTuesday Information for 2021-07-13 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"scoobydoo.csv\"\n\nScoob &lt;- tuesdata$scoobydoo\n\n\nscoob_wrangles &lt;- Scoob |&gt; \n  select(series_name, title, monster_name, monster_gender, captured_fred, captured_daphnie, captured_scooby, captured_velma, captured_shaggy, culprit_name, culprit_gender)\n\n\n#individual monsters of tv series \nscoobydoo_clean &lt;- Scoob |&gt;\n  filter(season %in% c(\"1\", \"2\",\"3\", \"4\"),\n         format == \"TV Series\") |&gt;\n  filter(monster_name != \"NULL\") |&gt;\n  mutate(monster_name = str_replace(monster_name, \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent,8,Agent,9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\", \"Dr. Phineus Phibes,Agent 1,Agent 2,Agent 3,Agent 4,Agent 5,Agent 6,Agent 7,Agent 8,Agent 9,Agent 10,Agent 11,Agent 12,Agent 13,Dr. Trebal\")) |&gt;\n  select(title, season, series_name, contains(\"monster\")) |&gt;\n  pivot_longer(cols = c(monster_name, monster_gender, monster_type, monster_subtype, monster_species), names_to = \"monster_var\", values_to = \"monster\") |&gt;\n  separate(monster, c(\"1monster\", \"2monster\", \"3monster\", \"4monster\", \"5monster\", \"6monster\", \"7monster\", \"8monster\", \"9monster\", \"10monster\", \"11monster\", \"12monster\", \"13monster\", \"14monster\", \"15monster\"), sep = \",\") |&gt;\n  pivot_longer(cols = ends_with(\"monster\"), names_to = \"monster_num\", values_to = \"monster_value\") |&gt;\n  pivot_wider(names_from = monster_var, values_from = monster_value) |&gt;\n  mutate(monster_num = as.numeric(str_sub(monster_num, 1, 1))) |&gt;\n  na.omit()\n\nWarning: Expected 15 pieces. Additional pieces discarded in 2 rows [960, 962].\n\n\nWarning: Expected 15 pieces. Missing pieces filled with `NA` in 1809 rows [1, 2, 3, 4,\n5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Kupa</span>"
    ]
  },
  {
    "objectID": "src/appx/proposal.html",
    "href": "src/appx/proposal.html",
    "title": "Appendix A — Proposal",
    "section": "",
    "text": "Your proposal will go here.\n\na title\n\n“Frequency of Common Phrases and Events across Scooby-Doo Episodes”\n\nthe names of the team members\n\nAdele Fraser, Maria Benito Correa, Sarah Radzilowski\n\na short description of the project\n\nWe will be exploring the Scooby-Doo dataset collected by Kaggle user plummye. We will focus our investigation on the common phrases used in Scooby-Doo episodes across time, as well as how these phrases relate to other events.\n\nthe reasons/inspirations behind choosing this project\n\nWe found a dataset on Scooby Doo episodes from the TidyTuesday datasets. Since there are so many variables tracked for each episode, including the number of times a phrase was said in an episode. We thought it would be interesting to analyze if there was a relationship between the number of times a phrase was said (ie “Zoinks” or “Jeepers”) and events of an episode (ie the type of monster or which character said phrases more often).\n\na rough implementation and responsibility plan, ie, what needs to be accomplished and who will do what when. Think about the list of deliverables when building the plan. The plan should be presented in a table format.\n\n\n\nWhat?\nWho?\nWhen?\n\n\n\n\nCreate Github Repository\nEveryone\n4/9\n\n\nGroup Project proposal\nEveryone\n4/9\n\n\nCase study\nEveryone\n4/9\n\n\nEffective Teamwork Reading\nEveryone (Independent)\n4/11\n\n\nMotivation\nSarah\n4/11\n\n\nCreate research questions\nEveryone\n4/11\n\n\nBackground\nMaria\n4/14\n\n\nUnderstand/explore the data (following the data questions on project description page)\nEveryone\n4/14\n\n\nWrangle Data for each Question\nAdele\n4/16\n\n\nMake visualizations to answer research questions and apply effective viz principles\nEveryone\n4/18\n\n\nConnect findings back to research questions\nAdele\n4/21\n\n\nLimitations and Future Work\nMaria\n4/21\n\n\nCreate README.md file (requirements on course site)\nEveryone\n4/24\n\n\nWrite report  (requirements on course site)\nEveryone\n4/24\n\n\nMake presentation slideshow\nEveryone\n4/28\n\n\nScript Outline for Presentation\nEveryone\n4/28\n\n\nUse Feedback from Presentation 1\nEveryone (Divided when received)\n5/9\n\n\nFinal Presentation Video\nEveryone\n5/9 (10:30 AM - 12:30 PM)",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Proposal</span>"
    ]
  },
  {
    "objectID": "src/appx/case-study.html",
    "href": "src/appx/case-study.html",
    "title": "Appendix B — Case Study",
    "section": "",
    "text": "Report referenced: https://fivethirtyeight.com/features/six-charts-to-help-americans-understand-the-upcoming-german-election/\nObservations\n“Six Charts To Help Americans Understand The Upcoming German Election” by Anna Hazard starts by providing a short context of why the author created this report.\nThen, the report presents six research questions. The questions start off broad (What are Germans voting on? What are the parties and what do they stand for?) and increasingly become more specific (Who’s in these parties? What is Afd?). At the end of the report, the author proposes and answers some follow-up questions related to the upcoming election (What else should I look out for in this election?).\nEach question is answered by short paragraphs of text followed by a visualization. The report includes a variety of visualizations we have made in class before: maps and scatter plots, and some that we are less familiar with making: tables, charts with organized dots, and more. Most of the visualizations have a title, followed by a one sentence caption. The visualizations are full of color.\nThe report and visualizations also compare German political parties to American political parties. This helps put the numbers into context and better explains the German political party system for an American audience, like the title suggests.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Case Study</span>"
    ]
  }
]